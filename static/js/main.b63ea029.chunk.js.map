{"version":3,"sources":["redux/utils/setAuthToken.js","views/services/account.service.js","views/Signin/index.module.css","components/SocialLink/index.js","components/Fallback/index.js","views/services/alert.service.js","views/services/index.js","components/Header/MenuBar/index.js","components/Header/ButtonGroups/index.js","assets/images/Signin/login-left2.jpg","components/LoginItem/index.js","redux/auth/types.js","views/helpers/fetch-wrapper.js","views/Signin/index.js","components/Header/Logo/index.js","components/Header/SearchButton/index.js","components/Header/Navigation/NavBox/index.js","components/Header/Navigation/MegaDropdown/MegaMenuItem/index.js","components/Header/Navigation/MegaDropdown/AvailabeJob/index.js","components/Header/Navigation/MegaDropdown/index.js","components/Header/Navigation/MenuItem/index.js","components/Header/Navigation/index.js","components/Header/index.js","components/Footer/FooNav/index.js","Chat/components/Login.js","Chat/hooks/useLocalStorage.js","Chat/contexts/SocketProvider.js","Chat/contexts/ConversationsProvider.js","Chat/components/Conversations.js","Chat/components/ContactsOLD.js","Chat/components/NewContactModal.js","Chat/components/NewConversationModal.js","Chat/components/Sidebar.js","Chat/components/OpenConversation.js","Chat/components/Dashboard.js","Chat/contexts/ContactsProvider.js","Chat/components/Chat.js","views/helpers/fake-backend.js","views/helpers/history.js","views/account/VerifyEmail.jsx","views/account/ForgotPassword.jsx","views/account/ResetPassword.jsx","views/account/Login.jsx","views/account/Register.jsx","views/account/Index.jsx","views/App/index.js","index.js","components/TitleComponent/index.js","components/LoginItem/index.module.css","redux/auth/actions.js","redux/auth/thunks.js","redux/auth/reducers.js","redux/index.js","store.js","redux/utils/api.js"],"names":["setAuthToken","token","id","api","defaults","headers","common","localStorage","setItem","removeItem","console","log","refreshTokenTimeout","userSubject","BehaviorSubject","baseUrl","email","password","a","fetchWrapper","post","user","next","startRefreshTokenTimer","logout","clearTimeout","refreshToken","get","params","put","value","delete","x","jwtToken","JSON","parse","atob","split","timeout","Date","exp","getTime","now","setTimeout","accountService","login","register","verifyEmail","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","getById","create","update","asObservable","module","exports","SocialLink","props","parentClass","childClass","to","type","msg","className","title","icon","faFacebookF","faTwitter","faLinkedinIn","faGooglePlusG","faPinterestP","faCommentDots","SubFallback","Fallback","alertSubject","Subject","defaultId","alertService","onAlert","pipe","filter","success","message","options","error","alert","AlertType","info","warn","clear","autoClose","undefined","hideBorder","content","name","Input","placeholder","Menubar","useState","open","setOpen","wrapperClassName","onToggle","header","src","alt","Button","onClick","faTimes","faBars","connect","state","isAuthenticated","auth","history","dropdownOpen","setDropdownOpen","getItem","setUser","config2","useEffect","axios","then","res","data","Dropdown","isOpen","toggle","prevState","DropdownToggle","Media","left","object","picture","width","style","marginTop","height","body","heading","tag","firstName","lastName","DropdownMenu","NavItem","exact","faUserEdit","href","faSuitcase","auth2","window","gapi","getAuthInstance","signOut","disconnect","onLogoutFailure","signOutgoogle","faSignInAlt","ApiGoogle","responseGoogle","response","Card","CardImg","LoginLeft","CardImgOverlay","CardBody","cls","List","ListGroup","ListGroupItem","color","render","renderProps","disabled","faGoogle","clientId","buttonText","onSuccess","onFailure","cookiePolicy","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAIL","ACCOUNT_DELETED","url","config1","authHeader","handleResponse","config","method","catch","userValue","isLoggedIn","isApiUrl","startsWith","Authorization","statusText","includes","status","Promise","reject","useForm","handleSubmit","control","errors","formState","isAuthenticatedGoogle","setIsAuthenticatedGoogle","formData","setFormData","onChange","e","val","fn","target","emailValidation","rules","required","pattern","errorMsg","passValidation","minLength","md","lg","onSubmit","from","location","pathname","push","field","inputplaceholder","autoComplete","addonType","faEnvelope","faLock","check","block","Logo","SearchButton","search","setSearch","React","searchTerm","setSearchTerm","background","zIndex","Form","FormGroup","event","faSearch","NavBox","activeIndex","children","classnames","hidden","MegaMenuItem","path","itemName","faSquare","AvailabeJob","logo","jobCategory","time","jobSkills","categories","jobLocation","openJobs","MenuItem","items","map","menuBoxItems","homePage","jobPage","pageList","dashboardPage","animatedMenu","component","fluid","Row","Col","sm","DropdownItem","item","i","Navigation","visable","setVisable","resetNavBoc","onMouseLeave","Navbar","Nav","onMouseEnter","Component","visible","setVisible","disableCompensation","topOffset","isSticky","xl","xs","ButtonGroups","Login","useLocalStorage","key","initialValue","prefixedKey","jsonValue","setValue","stringify","SocketContext","createContext","SocketProvider","socket","setSocket","newSocket","io","withCredentials","extraHeaders","query","close","Provider","ConversationsContext","permission","Notification","showNotification","document","visibilityState","notification","onclick","parent","focus","useConversations","useContext","ConversationsProvider","setConversations","setSelectedConversationIndex","ConversationAndID","setConversationAndID","addMessageToConversation","useCallback","text","conversations","fetchData","on","off","selectedConversation","sendMessage","recipients","emit","Chatting","MyId","FuncIsmimized","isminmized","FuncDeleteConversation","deleteId","DeleteId","ConnectedUserID","reload","selectConversationIndex","createConversation","prevConversations","messages","requestPermission","Conversations","variant","conversation","index","Item","float","firstname","action","confirmAlert","buttons","label","marginRight","paddingTop","paddingBottom","paddingRight","paddingLeft","backgroundColor","top","right","fontSize","borderRadius","notRead","Contacts","NewContactModal","NewConversationModal","ChattingWith","CONVERSATIONS_KEY","Sidebar","activeKey","setActiveKey","modalOpen","setModalOpen","conversationsOpen","closeModal","Tab","Container","onSelect","Content","Pane","eventKey","Modal","show","onHide","withRouter","match","setText","setRef","node","scrollIntoView","smooth","ObjWithConversation","find","Messages","Topic","topic","lastMessage","length","ref","substring","getConversationById","preventDefault","Group","InputGroup","Control","as","resize","Append","Dashboard","setshow","funcShow","ContactsContext","ContactsProvider","contacts","setContacts","createContact","prevContacts","useBeforeunload","onIdSubmit","usersKey","createBrowserHistory","VerifyEmail","EmailStatus","emailStatus","queryString","replace","keepAfterRouteChange","RemoveKoken","getBody","ForgotPassword","validationSchema","Yup","shape","initialValues","setSubmitting","finally","touched","isSubmitting","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","min","oneOf","getForm","registerUser","acceptTerms","jobTitle","aboutMe","fields","setStatus","htmlFor","Account","store","Register","LayoutOne","lazy","Blog","Candidate","Employer","About","ContactUs","NotFound","Pricing","Company","CompanyDetails","Job","JobDetails","Signup","Signin","useLocation","fallback","slice","withTitle","Chat","dispatch","loadUser","ReactDOM","getElementById","TitleComponent","loginSuccess","payload","loginFail","tokenId","updateUser","userID","patch","err","initialState","loading","combineReducers","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","baseURL","interceptors","use"],"mappings":"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","file":"static/js/main.b63ea029.chunk.js","sourcesContent":["import api from \"./api\";\r\n\r\nconst setAuthToken = (token,id) => {\r\n  if (token) {\r\n    api.defaults.headers.common[\"Authorization\"] = token;\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"id\", id);\r\n  } else {\r\n    delete api.defaults.headers.common[\"Authorization\"];\r\n    localStorage.removeItem(\"token\");\r\n    console.log(\"deleted token\");\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\nimport { BehaviorSubject } from 'rxjs';\nimport { fetchWrapper } from '../helpers/fetch-wrapper';\n\nconst userSubject = new BehaviorSubject(null);\nconst baseUrl = 'https://www.togedoortestgo.site/graphql/accounts';\n\n// function authHeader(url) {\n//     // return auth header with jwt if user is logged in and request is to the api url\n//     const user = accountService.userValue;\n//     const isLoggedIn = user && user.jwtToken;\n//     const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n//     console.log('user:_', user);\n//     console.log('isLoggedIn:_', isLoggedIn);\n//     console.log('isApiUrl:_', isApiUrl);\n\n//     if (isLoggedIn && isApiUrl) {\n//         return { Authorization: `Bearer ${user.jwtToken}` };\n//     } else {\n//         console.log('{} nothing');\n//         return {};\n//     }\n// }\n\nasync function login(email, password) {\n    const user = await fetchWrapper.post(`${baseUrl}/authenticate`, { email, password });\n    console.log(user);\n    // publish user to subscribers and start timer to refresh token\n    userSubject.next(user);\n    startRefreshTokenTimer();\n    return user;\n}\n\nfunction logout() {\n    // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\n    fetchWrapper.post(`${baseUrl}/revoke-token`, {});\n    stopRefreshTokenTimer();\n    userSubject.next(null);\n    // history.push('/account/login');\n}\n\nasync function refreshToken() {\n    const user = await fetchWrapper.post(`${baseUrl}/refresh-token`, {});\n    // publish user to subscribers and start timer to refresh token\n    userSubject.next(user);\n    startRefreshTokenTimer();\n    console.log(user);\n    return user;\n}\n\nfunction register(params) {\n    return fetchWrapper.post(`${baseUrl}/register`, params);\n}\n\nfunction verifyEmail(token) {\n    return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\n}\n\nfunction forgotPassword(email) {\n    return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\n}\n\nfunction validateResetToken(token) {\n    return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\n}\n\nfunction resetPassword({ token, password, confirmPassword }) {\n    return fetchWrapper.post(`${baseUrl}/reset-password`, { token, password, confirmPassword });\n}\n\nasync function getAll() {\n    return await fetchWrapper.get(baseUrl);\n}\n\nfunction getById(id) {\n    return fetchWrapper.get(`${baseUrl}/${id}`);\n}\n\nfunction create(params) {\n    return fetchWrapper.post(baseUrl, params);\n}\n\nasync function update(id, params) {\n    const user = await fetchWrapper.put(`${baseUrl}/${id}`, params);\n    // update stored user if the logged in user updated their own record\n    if (user.id === userSubject.value.id) {\n        // publish updated user to subscribers\n        user = { ...userSubject.value, ...user };\n        userSubject.next(user);\n    }\n    return user;\n}\n\n// prefixed with underscore because 'delete' is a reserved word in javascript\nasync function _delete(id) {\n    const x = await fetchWrapper.delete(`${baseUrl}/${id}`);\n    // auto logout if the logged in user deleted their own record\n    if (id === userSubject.value.id) {\n        logout();\n    }\n    return x;\n}\n\n// helper functions\n\nlet refreshTokenTimeout;\n\nfunction startRefreshTokenTimer() {\n    // parse json object from base64 encoded jwt token\n    const jwtToken = JSON.parse(atob(userSubject.value.jwtToken.split('.')[1]));\n\n    // set a timeout to refresh the token a minute before it expires\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\n    refreshTokenTimeout = setTimeout(refreshToken, timeout);\n}\n\nfunction stopRefreshTokenTimer() {\n    clearTimeout(refreshTokenTimeout);\n}\n\nexport const accountService = {\n    login,\n    logout,\n    refreshToken,\n    register,\n    verifyEmail,\n    forgotPassword,\n    validateResetToken,\n    resetPassword,\n    getAll,\n    getById,\n    create,\n    update,\n    delete: _delete,\n    user: userSubject.asObservable(),\n    get userValue() {\n        console.log(userSubject);\n        return userSubject.value;\n    },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMsg\":\"Signin_errorMsg__2aGFU\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFacebookF,\n  faTwitter,\n  faLinkedinIn,\n  faGooglePlusG,\n  faPinterestP,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faCommentDots } from '@fortawesome/free-regular-svg-icons';\n\nconst SocialLink = (props) => {\n  const { parentClass, childClass, to, type, msg } = props;\n  return (\n    <ul className={`social-link d-flex m-0 p-0 ${parentClass}`}>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Facebook\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faFacebookF} />\n        </Link>\n      </li>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Twitter\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faTwitter} />\n        </Link>\n      </li>\n      <li className=\"mr-2\">\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Linkedin\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faLinkedinIn} />\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={` ${childClass && childClass}`}\n          title=\"Google\"\n          to={to || '#'}\n        >\n          <FontAwesomeIcon icon={faGooglePlusG} />\n        </Link>\n      </li>\n      {type === 'bloger' && (\n        <>\n          <li>\n            <Link\n              className={` ${childClass && childClass}`}\n              title=\"Google\"\n              to={to || '#'}\n            >\n              <FontAwesomeIcon icon={faPinterestP} />\n            </Link>\n          </li>\n          <li>\n            <Link\n              className={` ${childClass && childClass} position-relative`}\n              title=\"Google\"\n              to={to || '#'}\n            >\n              <FontAwesomeIcon icon={faCommentDots} />\n              <span className=\"tool-tip position-absolute bg-primary text-white font-10 rounded-circle d-flex justify-content-center align-items-center\">\n                {msg}\n              </span>\n            </Link>\n          </li>\n        </>\n      )}\n    </ul>\n  );\n};\n\nexport default SocialLink;\n","import React from 'react';\n\nexport const SubFallback = () => {\n  return (\n    <div className=\"sk-cube-grid\">\n      <div className=\"sk-cube sk-cube1\" />\n      <div className=\"sk-cube sk-cube2\" />\n      <div className=\"sk-cube sk-cube3\" />\n      <div className=\"sk-cube sk-cube4\" />\n      <div className=\"sk-cube sk-cube5\" />\n      <div className=\"sk-cube sk-cube6\" />\n      <div className=\"sk-cube sk-cube7\" />\n      <div className=\"sk-cube sk-cube8\" />\n      <div className=\"sk-cube sk-cube9\" />\n    </div>\n  );\n};\n\nconst Fallback = () => {\n  return (\n    <div className=\"jb_preloader position-fixed bg-white\">\n      <div className=\"spinner_wrap position-absolute\">\n        <div className=\"spinner bg-white rounded-circle\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Fallback;\n","import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\n\nexport const alertService = {\n    onAlert,\n    success,\n    error,\n    info,\n    warn,\n    alert,\n    clear,\n};\n\nexport const AlertType = {\n    Success: 'Success',\n    Error: 'Error',\n    Info: 'Info',\n    Warning: 'Warning',\n};\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n    return alertSubject.asObservable().pipe(filter((x) => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n    console.log('success worked');\n    // alert('success worked')\n    // alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n    alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n    alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n    alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n    alert.id = alert.id || defaultId;\n    alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\n    alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n    alertSubject.next({ id });\n}\n","export * from './account.service';\nexport * from './alert.service';\n","// External components\nimport React, { useState } from 'react';\nimport { Input, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MultilevelSidebar from 'react-multilevel-sidebar';\nimport 'react-multilevel-sidebar/src/Sidebar.css';\n\nconst options = [\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 1,\n        name: (\n          <Input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            placeholder=\"Search....\"\n            className=\"border-0 bg-white p-0 \"\n          />\n        ),\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 2,\n        name: <Link to=\"/\">Home</Link>,\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 3,\n        name: <Link to=\"/candidate/profile\">Profile</Link>,\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 4,\n        name: <Link to=\"/job\">Jobs</Link>,\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 5,\n        name: <Link to=\"/chat/00000\">Chat</Link>,\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n  {\n    hideBorder: true,\n    content: [\n      {\n        id: 6,\n        name: <Link to=\"/contactus\">Contact</Link>,\n        icon: <i className=\"fa fa-chrome\" />,\n      },\n    ],\n  },\n\n\n];\n\nconst Menubar = () => {\n  const [open, setOpen] = useState(false);\n  const handleClick = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <MultilevelSidebar\n        open={open}\n        options={options}\n        wrapperClassName=\"header-menu-bar\"\n        onToggle={handleClick}\n        header={\n          <div className=\"text-left pl-4 pb-2 d-flex justify-content-between\">\n            <Link to=\"/\">\n              <img\n                src='https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'\n                alt=\"menu-logo\"\n                className=\"my-1\"\n              />{' '}\n            </Link>\n            <Button\n              onClick={() => setOpen(false)}\n              className=\"bg-white border-0 p-0 pr-3\"\n            >\n              <FontAwesomeIcon className=\"text-dark\" icon={faTimes} />{' '}\n            </Button>\n          </div>\n        }\n\n      />\n      {/* using in our button to open the sidebar */}\n      <Button\n        onClick={() => setOpen(true)}\n        className=\"bg-white border-0 d-xl-none d-lg-none d-inline-block text-primary ml-auto mr-md-3 mr-sm-2 p-sm-0\"\n      >\n        <FontAwesomeIcon icon={faBars} />\n      </Button>\n    </>\n  );\n};\n\nexport default Menubar;","// External components\nimport React, { useEffect, useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport { Dropdown, DropdownToggle, DropdownMenu, Media, NavItem } from 'reactstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { faUserEdit, faCog, faSignInAlt, faSuitcase } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { accountService, alertService } from '../../../views/services';\nimport Menubar from '../MenuBar';\nimport store from '../../../store';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst ButtonGroups = ({ history }) => {\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const token = localStorage.getItem('token');\n    const [user, setUser] = useState({});\n\n    var config2 = {\n        headers: {\n            'Authorization': token\n        }\n    }\n\n    useEffect(() => {\n\n        function fetchData() {\n            axios.get(`https://www.togedoortestgo.site/graphql/accounts/${localStorage.id}`, config2)\n                .then(res => {\n                    setUser(res.data)\n                })\n        }\n        fetchData();\n        // useEffect(() => {\n        //     accountService.getAll().then(x => setUsers(x));\n    }, [token]);\n\n    const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n\n    const handleLogout = () => {\n        try {\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n            //google\n\n            const logout = (res) => {\n                console.log('out google');\n                console.log(res);\n\n            };\n            const signOutgoogle = () => {\n                const auth2 = window.gapi.auth2.getAuthInstance();\n                if (auth2 != null) {\n                    auth2.signOut().then(auth2.disconnect().then(logout));\n                    // userSubject.next(null);\n\n                } else {\n                    this.props.onLogoutFailure();\n                }\n            };\n            signOutgoogle();\n            // end google\n\n            localStorage.removeItem('token');\n            localStorage.removeItem('email');\n            localStorage.removeItem('id');\n\n            // userSubject.next(null);\n\n\n        } catch (error) {\n            console.log(error);\n        }\n        setUser({})\n\n    };\n\n\n\n    return (\n        <>\n            <Dropdown\n                className='user-profile d-xl-block d-lg-block d-md-block d-sm-block  d-none '\n                isOpen={dropdownOpen}\n                toggle={toggle}>\n                <DropdownToggle className='bg-transparent text-dark border-0 p-0'>\n                    <Media>\n                        {user ? (\n                            <Media left>\n                                <Media\n                                    object\n                                    src={user.picture}\n                                    alt=\"user profile\"\n                                    width=\"65px\"\n                                    style={{ marginTop: '10px' }}\n                                    height=\"60px\"\n                                    className=\"rounded-circle\"\n                                />\n                            </Media>\n                        ) : (<p></p>)}\n\n                        <Media\n                            body\n                            className='text-primary ml-3 d-none d-xl-block d-md-block d-lg-none'>\n                            <Media heading tag=\"h5\" className=\"text-dark\">\n                                {user.firstName} {user.lastName}\n                            </Media>\n                            {user.email}\n                            {/* {authenticatedUser && authenticatedUser.role === 'User' ? (\n                                <img src={temp} width='60' height='30' className='rounded-circle' />\n                            ) : authenticatedUser && authenticatedUser.role === 'user from Google' ? (\n                                <img\n                                    src={`https://www.togedoortestgo.site/graphql/${user.picture}`}\n                                    width='60'\n                                    height='30'\n                                    className='rounded-circle'\n                                />\n                            ) : (\n                                <img width='60' height='30' className='rounded-circle' />\n                            )} */}\n                        </Media>\n                    </Media>\n                </DropdownToggle>\n                <DropdownMenu className='p-0'>\n                    <NavItem>\n                        <NavLink className='nav-link single-link position-relative ' exact to='/candidate/profile'>\n                            <FontAwesomeIcon className='mr-2 position-relative text-primary' icon={faUserEdit} />\n                            Profile settings\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <a className='nav-link single-link position-relative ' href='/candidate/manage'>\n                            <FontAwesomeIcon className=' mr-2 position-relative text-primary' icon={faSuitcase} />\n                            My projects\n                        </a>\n                    </NavItem>\n                    <NavItem>\n                        <a className='nav-link single-link position-relative ' href='/' onClick={handleLogout}>\n                            <FontAwesomeIcon\n                                className=' mr-2 position-relative  text-primary'\n                                icon={faSignInAlt}\n                            />\n                            Logout\n                        </a>\n                    </NavItem>\n                </DropdownMenu>\n            </Dropdown>\n            <Menubar />\n        </>\n    );\n};\n\n// export default ButtonGroups\nButtonGroups.propTypes = {\n    user: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {})(ButtonGroups);\n","export default __webpack_public_path__ + \"static/media/login-left2.3d541667.jpg\";","import React from 'react';\nimport { Card, CardImg, CardBody, CardImgOverlay, Button, ListGroup, ListGroupItem, List } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF, faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport LoginLeft from '../../assets/images/Signin/login-left2.jpg';\nimport cls from './index.module.css';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { ApiGoogle } from '../../redux/auth/thunks';\nimport axios from 'axios'\nconst LoginItem = ({ ApiGoogle }) => {\n\n    // const [isAuthenticatedGoogle, setIsAuthenticatedGoogle] = useState(false);\n\n    const responseFacebook = (response) => {\n        console.log(response);\n    };\n\n    const responseGoogle = async (response) => {\n        console.log(response);\n        ApiGoogle(response);\n    };\n\n\n\n    return (\n        <Card className='text-center border-0'>\n            <CardImg width='100%' src={LoginLeft} alt='Card image cap' />\n            <CardImgOverlay>\n                <img\n                    id='img-Logo'\n                    height='50'\n                    alt='img-logo'\n                    src='https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'\n                />\n                <CardBody className='text-center pt-6'>\n                    <h1 className={cls['headers']} id='content-title'>\n                        How It Works?\n                    </h1>\n                    <List type='unstyled'>\n                        <h2 className={cls['headers']}>Your Gigs Journey</h2>\n                        <br />\n                        <div className={cls['div-contain'] + ' row'}>\n                            <ul className={cls['uls']}>\n                                <h3 className={cls['headers']}>Gig Provider</h3>\n                                <li className={cls['bullets']}>1. Register</li>\n                                <li className={cls['bullets']}>2. Post gigs</li>\n                                <li className={cls['bullets']}>3. Approve Submitters</li>\n                            </ul>\n                            <ul>\n                                <h3 className={cls['headers']}>Gig Submitter</h3>\n                                <li className={cls['bullets']}>1. Register</li>\n                                <li className={cls['bullets']}>2. Review gigs</li>\n                                <li className={cls['bullets']}>3. Apply for gigs</li>\n                            </ul>\n                        </div>\n                    </List>\n                    <hr />\n                    <ListGroup>\n                        {/* <ListGroupItem className='bg-transparent p-0'>\n                            <FacebookLogin\n                                appId='394386971840074'\n                                autoLoad={false}\n                                fields='name,email,picture'\n                                scope='public_profile,email'\n                                callback={responseFacebook}\n                                render={(renderProps) => (\n                                    <Button\n                                        disabled\n                                        color='primary'\n                                        className='outline-hover--effect'\n                                        onClick={renderProps.onClick}>\n                                        Login With Facebook\n                                        <FontAwesomeIcon className='ml-5' icon={faFacebookF} />\n                                    </Button>\n                                )}\n                            />\n                        </ListGroupItem> */}\n                        <br />\n                        <ListGroupItem className='bg-transparent p-0'>\n                            <GoogleLogin\n                                color='primary'\n                                render={(renderProps) => (\n                                    <Button\n                                        color='primary'\n                                        className='outline-hover--effect'\n                                        onClick={renderProps.onClick}\n                                        disabled={renderProps.disabled}>\n                                        &nbsp; Login With Google &nbsp;\n                                        <FontAwesomeIcon className='ml-5' icon={faGoogle} />\n                                    </Button>\n                                )}\n                                className='outline-hover--effect btn-primary'\n                                clientId='584638914485-2tdlq9omj9crtfevmucsj5d0rq6v90nt.apps.googleusercontent.com'\n                                buttonText='Login With Google'\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </ListGroupItem>\n                    </ListGroup>\n                </CardBody>\n                <div className='login-or-register position-absolute font-18 d-none d-lg-block'>\n                    <h6 className='text-white font-weight-bold'>OR</h6>\n                </div>\n            </CardImgOverlay>\n        </Card>\n    );\n};\nLoginItem.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n// export default Signin;\nexport default connect(mapStateToProps, { ApiGoogle })(LoginItem);\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const EDIT_USER_REQUEST = \"EDIT_USER_REQUEST\";\r\nexport const EDIT_USER_SUCCESS = \"EDIT_USER_SUCCESS\";\r\nexport const EDIT_USER_FAIL = \"EDIT_USER_FAIL\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\n","// import config from '../helpers/';\n// import { config } from '@fortawesome/fontawesome-svg-core';\nimport { accountService } from '../services';\n// import { accountService } from '@/_services';\n\nimport axios from 'axios';\nexport const fetchWrapper = {\n    get,\n    post,\n    put,\n    delete: _delete,\n};\n\n// function get(url) {\n//     const requestOptions = {\n//         method: 'GET',\n//         headers: authHeader(url),\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nasync function get(url) {\n    const config = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    return await axios\n        .get(url, config)\n        .then((response) => handleResponse(response))\n        .catch((error) => {\n            console.log('`fetch-wrapper.js` get(url) error: ', error);\n        });\n}\n\n// function post(url, body) {\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json', ...authHeader(url) },\n//         credentials: 'include',\n//         body: JSON.stringify(body)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nasync function post(url, body) {\n    // return handleResponse('from post')\n    const config = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    console.log('url:_', url);\n    console.log('body:_', body);\n    console.log('config:_', config);\n    await axios.post(url, body, config).then((response) => {\n        console.log(response);\n        return handleResponse(response);\n    });\n\n    // axios.post(url,body,config1) .then((response) => {\n    //   console.log(response);\n    //   // history.push('/')\n    //   return handleResponse(response)\n    // })\n    // .catch((error) => {\n    //     console.log(error);\n    // })\n}\n\n// function put(url, body) {\n//     const requestOptions = {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json', ...authHeader(url) },\n//         body: JSON.stringify(body)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nfunction put(url, body) {\n    var config1 = {\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    return axios.post(url, body, config1).then(handleResponse);\n\n    //  .then((response) => {\n    //     console.log(response);\n    //     // return handleResponse(response)\n    // // return handleResponse\n    //   })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     })\n    //  ) }\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\n// function _delete(url) {\n//     const requestOptions = {\n//         method: 'DELETE',\n//         headers: authHeader(url)\n//     };\n//     return fetch(url, requestOptions).then(handleResponse);\n// }\n\nfunction _delete(url) {\n    var config1 = {\n        headers: {\n            'Content-Type': 'application/json',\n            ...authHeader(url),\n        },\n    };\n    // return( axios.post(url,config1)\n\n    //        .then((response) => {\n    //           console.log(response);\n    //           return handleResponse(response)\n    //         })\n    //         .catch((error) => {\n    //           console.log(error);\n    //         })\n    // )\n    return axios.post(url, config1).then(handleResponse);\n}\n\n// helper functions\n\n// function authHeader(url) {\n//     // https://www.togedoortestgo.site/graphql/accounts\n//     // return auth header with jwt if user is logged in and request is to the api url\n//     const user = accountService.userValue;\n//     const isLoggedIn = user && user.jwtToken;\n//     const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n//     // console.log('accountService.userValue: ', accountService.userValue);\n//     console.log('user', user);\n//     // console.log('user.jwtToken: ', user.jwtToken);\n//     // console.log('isLoggedIn', isLoggedIn);\n//     // console.log('isApiUrl', isApiUrl);\n//     if (isLoggedIn && isApiUrl) {\n//         return { Authorization: `Bearer ${user.jwtToken}` };\n//     } else {\n//         return {};\n//     }\n// }\n\nfunction authHeader(url) {\n    // return auth header with jwt if user is logged in and request is to the api url\n    const user = accountService.userValue;\n    const isLoggedIn = user && user.jwtToken;\n    const isApiUrl = url.startsWith('https://www.togedoortestgo.site/graphql');\n    if (isLoggedIn && isApiUrl) {\n        return { Authorization: `Bearer ${user.jwtToken}` };\n    } else {\n        return {};\n    }\n}\nasync function handleResponse(response) {\n    console.log('response');\n    console.log(response);\n    // return (response.then((text) => {\n    const data = await response;\n\n    if (!data.statusText === 'ok') {\n        console.log('return data');\n        if ([401, 403].includes(response.status) && accountService.userValue) {\n            // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n            accountService.logout();\n        }\n\n        const error = (data && data.message) || response.statusText;\n        return Promise.reject(error);\n    }\n    return data;\n}\n// return response.data;\n\n// return response\n\n// )}\n","import React, { useState } from 'react';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Card,\n    InputGroup,\n    InputGroupText,\n    InputGroupAddon,\n} from 'reactstrap';\nimport { faEnvelope, faLock } from '@fortawesome/free-solid-svg-icons';\nimport LoginItem from 'src/components/LoginItem';\nimport { Link, Redirect } from 'react-router-dom';\nimport { login } from '../../redux/auth/thunks';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport cls from './index.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { accountService, alertService } from \"../../views/services\";\n\n\nconst Signin = ({ login, isAuthenticated, ApiGoogle }) => {\n\n\n    const {\n        handleSubmit,\n        control,\n        formState: { errors },\n    } = useForm();\n\n    const [isAuthenticatedGoogle, setIsAuthenticatedGoogle] = useState(false);\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const { email, password } = formData;\n\n    const onChange = (e, val, fn) => {\n        setFormData({ ...formData, [e.target.name]: val });\n        fn(val);\n    };\n\n\n\n    function onSubmit({ email, password },) {\n\n        alertService.clear();\n        login(email, password)\n            .then(() => {\n                const { from } = location.state || { from: { pathname: \"/\" } };\n                history.push(from);\n            })\n            .catch(error => {\n                alertService.error(error);\n            });\n    }\n\n\n\n    if (isAuthenticatedGoogle) {\n        return <Redirect to='/' />;\n    }\n    if (isAuthenticated) {\n        return <Redirect to='/' />;\n    }\n\n    const responseGoogle = async (response) => {\n        console.log(response);\n        ApiGoogle(response);\n    };\n\n    const emailValidation = {\n        rules: {\n            required: true,\n            pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Invalid email address',\n            },\n        },\n        error: errors.email && <p className={cls.errorMsg}>{errors.email.message}</p>,\n    };\n\n    const passValidation = {\n        rules: {\n            required: true,\n            minLength: 6,\n            message: 'This is the required field',\n        },\n        error: errors.password && <p className={cls.errorMsg}>This is the required field</p>,\n    };\n\n    return (\n        <Container className='pt-13'>\n            <Card className='overflow-hidden'>\n                <Row>\n                    <Col md={12} lg={6} className='p-0'>\n                        <LoginItem setIsAuthenticatedGoogle={setIsAuthenticatedGoogle} />\n                    </Col>\n                    <Col md={12} lg={6} className='p-0'>\n                        <Form className='text-center login-form  py-14 px-13' onSubmit={handleSubmit(onSubmit)}>\n                            <h4 className='pb-5'>Login</h4>\n                            <InputGroup className=' mb-4'>\n                                <Controller\n                                    control={control}\n                                    name='email'\n                                    rules={emailValidation.rules}\n                                    render={({ field }) => (\n                                        <Input\n                                            className='bg-transparent text-primary border-right-0'\n                                            name='email'\n                                            type='email'\n                                            inputplaceholder='Email Address*'\n                                            placeholder='Email'\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(e, e.target.value, field.onChange)}\n                                        />\n                                    )}\n                                />\n                                <InputGroupAddon addonType='append'>\n                                    <InputGroupText className='bg-transparent text-primary border-left-0'>\n                                        <FontAwesomeIcon className='text-primary' icon={faEnvelope} />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            {emailValidation.error}\n                            {/*....................................................................... */}\n                            <InputGroup className=' mb-4'>\n                                <Controller\n                                    control={control}\n                                    name='password'\n                                    rules={passValidation.rules}\n                                    render={({ field }) => (\n                                        <Input\n                                            className='border-right-0'\n                                            name='password'\n                                            type='password'\n                                            inputplaceholder='Password*'\n                                            placeholder='Password'\n                                            autoComplete='off'\n                                            onChange={(e) => onChange(e, e.target.value, field.onChange)}\n                                        />\n                                    )}\n                                />\n\n                                <InputGroupAddon addonType='append'>\n                                    <InputGroupText className='bg-transparent text-primary border-left-0'>\n                                        <FontAwesomeIcon className='text-primary' icon={faLock} />\n                                    </InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            {passValidation.error}\n\n                            {/*....................................................................... */}\n                            <FormGroup check className='my-5'>\n                                <Label check className='text-muted'>\n                                    <Input type='checkbox' /> Remember me? &nbsp;\n                                    <Link to='/forget-Password' className='text-primary' id='forget-Password'>\n                                        Forgot Password\n                                    </Link>\n                                </Label>\n                            </FormGroup>\n                            <Button block color='primary' className='btn-lg  my-5 outline-hover--effect'>\n                                Login\n                            </Button>\n                            <FormGroup>\n                                <Label className='text-muted'>\n                                    Don’t have an acount? &nbsp;\n                                    <Link to='/account/register' className='text-primary'>\n                                        Sign up\n                                    </Link>\n                                </Label>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </Card>\n        </Container>\n    );\n};\n\nSignin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n// export default Signin;\nexport default connect(mapStateToProps, { login })(Signin);\n","// External components\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\nconst Logo = () => {\n  // const theme = useSelector((store) => store.theme);\n\n  return (\n    <Link to=\"/\" className=\"\">\n      <img\n        src={\n\n          'https://static.wixstatic.com/media/8d6fde_4ca895424eaf43f6a56e6bdeef5f2d14~mv2.png/v1/crop/x_0,y_0,w_664,h_211/fill/w_245,h_71,al_c,q_85,usm_0.66_1.00_0.01/TogeDOOR_edited.webp'}\n        alt=\"logo\"\n        className=\"image-fluid\"\n      />\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst SearchButton = (props) => {\n  const [search, setSearch] = useState(false);\n\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n\n\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n    console.log(searchTerm)\n  };\n\n\n  // React.useEffect(() => {\n  //   const results = services.filter(service =>\n  //     service.JobTitle\n  //       .toLowerCase().includes(searchTerm)\n  //   );\n  //   debugger\n  //   console.log(results)\n  //   setSearchResults(results);\n  // }, [searchTerm]);\n\n\n\n  return (\n    <div className=\"search-button align-self-center overflow-hidden\">\n      <div\n        className={`position-fixed text-left pl-4  d-flex justify-content-around align-items-center ${search ? 'search-toggle' : 'search-slider'\n          }`}\n        style={{ width: '100%', background: '#fff', zIndex: 999 }}\n      >\n        <Form className=\"pl-13 w-50\">\n          <FormGroup className=\"m-0 \">\n            <Input\n              type=\"text\"\n              name=\"search\"\n              id=\"exampleEmail\"\n              placeholder=\"Type to Search\"\n              className=\"border-0 py-6 font-20\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n        </Form>\n        <Button\n          onClick={() => setSearch(!search)}\n          className=\"bg-white border-0 p-0 pt-3 align-self-center\"\n        >\n          <FontAwesomeIcon className=\"text-dark\" icon={faTimes} />{' '}\n        </Button>\n      </div>\n      <Button\n        onClick={() => setSearch(!search)}\n        className=\"bg-white border-0 text-primary p-0 align-self-center \"\n      >\n        <FontAwesomeIcon icon={faSearch} />\n      </Button>\n    </div>\n  );\n};\n\nexport default SearchButton;\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst NavBox = (props) => {\n  const { id, activeIndex, children } = props;\n  return (\n    <div\n      className={classnames('menu-item', {\n        'menu-item-left': activeIndex < id,\n        'menu-item-right': activeIndex > id,\n      })}\n      hidden={activeIndex === id ? false : true}\n    >\n      <ul className=\"content-menu border-primary\">{children}</ul>\n    </div>\n  );\n};\n\nexport default NavBox;\n","// External component\nimport React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst MegaMenuItem = ({  path, itemName }) => {\n  return (\n    <li>\n      <Link className='position-relative text-dark  d-block' title={itemName} to={path}>\n        <FontAwesomeIcon className='squre mr-2 position-relative' icon={faSquare} /> {itemName}\n      </Link>\n    </li>\n  );\n};\n\nexport default MegaMenuItem;\n","import React from 'react';\nimport { Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nconst AvailabeJob = (props) => {\n  const { logo, jobCategory, time } = props;\n  return (\n    <Media className=\"px-4 pb-5\">\n      <Media left>\n        <Media\n          style={{ width: 80 }}\n          className=\"d-block  border\"\n          object\n          src={logo}\n          alt=\"job\"\n        />\n      </Media>\n      <Media body className=\"pl-3 align-self-center\">\n        <Link to=\"#\">\n          <h6 className=\"text-dark font-14\">{jobCategory}</h6>\n          <p className=\"text-primary font-14\">{time}</p>\n        </Link>\n      </Media>\n    </Media>\n  );\n};\n\nexport default AvailabeJob;\n","// External component\nimport React from 'react';\nimport { Row, Col, Container, DropdownItem } from 'reactstrap';\n\n// Own component\nimport ProductItem from './MegaMenuItem';\nimport AvailabeJob from './AvailabeJob';\n\nconst jobSkills = [\n  {\n    path: '#',\n    itemName: 'HTML5 & CSS3',\n  },\n  {\n    path: '#',\n    itemName: 'wordpress',\n  },\n  {\n    path: '#',\n    itemName: ' javascript',\n  },\n  {\n    path: '#',\n    itemName: 'photoshop',\n  },\n  {\n    path: '#',\n    itemName: 'designer',\n  },\n  {\n    path: '#',\n    itemName: 'construction',\n  },\n];\nconst categories = [\n  {\n    path: '#',\n    itemName: 'graphic design',\n  },\n  {\n    path: '#',\n    itemName: ' engineering jobs',\n  },\n  {\n    path: '#',\n    itemName: ' mainframe jobs',\n  },\n  {\n    path: '#',\n    itemName: ' PSU jobs',\n  },\n  {\n    path: '#',\n    itemName: 'goverment jobs',\n  },\n  {\n    path: '#',\n    itemName: 'IT company',\n  },\n];\nconst jobLocation = [\n  {\n    path: '#',\n    itemName: 'India',\n  },\n  {\n    path: '#',\n    itemName: 'United State',\n  },\n  {\n    path: '#',\n    itemName: 'Japan',\n  },\n  {\n    path: '#',\n    itemName: 'Dubai',\n  },\n  {\n    path: '#',\n    itemName: 'South Africa',\n  },\n  {\n    path: '#',\n    itemName: 'China',\n  },\n];\nconst openJobs = [\n  {\n    logo:\n      'https://webstrot.com/html/jbdesk/main_version/main_pages/images/job1.jpg',\n    jobCategory: 'Some Designers Inelevated The..',\n    time: '5 hour ago',\n  },\n  {\n    logo:\n      'https://webstrot.com/html/jbdesk/main_version/main_pages/images/job1.jpg',\n    jobCategory: 'Some Designers Inelevated The..',\n    time: '12 hour ago',\n  },\n];\nconst MegaDropDown = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <Col className=\" p-0\" lg={3} sm={6} md={6}>\n          <ul className=\"border-right p-0 pb-3\">\n            <DropdownItem\n              header\n              className=\"p-5 border-0 text-primary h5 bg-white\"\n            >\n              Job Skills\n            </DropdownItem>\n            {jobSkills &&\n              jobSkills.map((item, i) => <ProductItem key={i} {...item} />)}\n          </ul>\n        </Col>\n        <Col className=\" p-0\" lg={3} sm={6} md={6}>\n          <ul className=\"border-right p-0 pb-3\">\n            <DropdownItem\n              header\n              className=\"p-5 border-0 text-primary h5 bg-white\"\n            >\n              Categories\n            </DropdownItem>\n            {categories &&\n              categories.map((item, i) => <ProductItem key={i} {...item} />)}\n          </ul>\n        </Col>\n        <Col className=\" p-0\" lg={3} sm={6} md={6}>\n          <ul className=\"border-right p-0 pb-3\">\n            <DropdownItem\n              header\n              className=\"p-5 border-0 text-primary h5 bg-white\"\n            >\n              Jackets\n            </DropdownItem>\n            {jobLocation &&\n              jobLocation.map((item, i) => <ProductItem key={i} {...item} />)}\n          </ul>\n        </Col>\n        <Col className=\" p-0\" lg={3} sm={6} md={6}>\n          <ul className=\"p-0 pb-3\">\n            <DropdownItem\n              header\n              className=\"p-5 border-0 text-primary h5 bg-white\"\n            >\n              Accessories\n            </DropdownItem>\n            {openJobs &&\n              openJobs.map((item, i) => <AvailabeJob key={i} {...item} />)}\n          </ul>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default MegaDropDown;\n","import React from 'react';\nimport { NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MenuItem = ({ items }) =>\n  items &&\n  items.map(({ id, title, path }) => (\n    <NavItem key={id}>\n      <NavLink\n        className=\"nav-link single-link position-relative \"\n        exact\n        to={path}\n      >\n        <FontAwesomeIcon\n          className=\"squre mr-2 position-relative\"\n          icon={faSquare}\n        />\n        {title}\n      </NavLink>\n    </NavItem>\n  ));\n\nexport default MenuItem;\n","import React, { useState } from 'react';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\n\nimport SearchButton from '../SearchButton';\nimport NavBox from './NavBox';\nimport MegaDropdown from './MegaDropdown';\nimport MenuItem from './MenuItem';\n\nconst menuBoxItems = {\n    homePage: [\n        {\n            id: 1,\n            title: 'home',\n            path: '/',\n        },\n    ],\n    jobPage: [\n        {\n            id: 1,\n            title: 'Jobs',\n            path: '/job',\n        },\n        {\n            id: 2,\n            title: 'Job Single',\n            path: '/job/details',\n        },\n    ],\n    pageList: [\n        {\n            id: 1,\n            title: 'About Us',\n            path: '/about',\n        },\n        {\n            id: 2,\n            title: 'Companies',\n            path: '/company',\n        },\n        {\n            id: 3,\n            title: 'Company Single',\n            path: '/company/details',\n        },\n        {\n            id: 4,\n            title: 'Error Page',\n            path: 'err',\n        },\n        {\n            id: 5,\n            title: 'Login',\n            path: '/signin',\n        },\n        {\n            id: 6,\n            title: 'Pricing Table',\n            path: '/pricing',\n        },\n        {\n            id: 7,\n            title: 'Sign Up',\n            path: '/account/register',\n        },\n    ],\n    dashboardPage: [\n        {\n            id: 1,\n            title: 'Company',\n            path: '/employer',\n        },\n    ],\n};\n\nconst animatedMenu = [\n    { id: 1, component: () => <MenuItem items={menuBoxItems.homePage} /> },\n    { id: 2, component: () => <MenuItem items={menuBoxItems.jobPage} /> },\n    { id: 3, component: MegaDropdown },\n    { id: 4, component: () => <MenuItem items={menuBoxItems.pageList} /> },\n    { id: 5, component: () => <MenuItem items={menuBoxItems.dashboardPage} /> },\n];\n\nconst Navigation = () => {\n    const [visable, setVisable] = useState(false);\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n\n    const onMouseEnter = (e, i, size) => {\n        const el = document.getElementById('menu-con');\n        const offset =\n            -1 * (window.innerWidth / 2 - (e.target.getBoundingClientRect().left + e.target.offsetWidth / 2));\n\n        el.style.setProperty('--siteMenuArrowOffset', `${offset}px`);\n        if (size) {\n            el.style.setProperty('--siteMenuBoxHeight', `${size[0]}px`);\n            el.style.setProperty('--siteMenuBoxWidth', `${size[1]}px`);\n        }\n\n        setActiveIndex(i);\n        setVisable(true);\n    };\n\n    const resetNavBoc = () => {\n        setVisable(false);\n    };\n\n    return (\n        <div\n            className={classnames('navigation position-relative', {\n                'menu-container-visable': visable,\n            })}\n            onMouseLeave={resetNavBoc}>\n            <Navbar className='p-0 border-right d-lg-block d-xl-block d-none'>\n                <Nav>\n                    <NavItem className='dropdown'>\n                        <Link\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/'\n                            // onMouseEnter={(e) => onMouseEnter(e, 1, [145, 180])}\n                            onMouseEnter={resetNavBoc}>\n                            Home\n                        </Link>\n                    </NavItem>\n\n                    <NavItem >\n                        <Link\n                            // onMouseEnter={(e) => onMouseEnter(e, 2, [100, 220])}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/job'>\n                            Projects\n                        </Link>\n                    </NavItem>\n                    {/* <NavItem className='dropdown'>\n                        <Link\n                            onMouseEnter={(e) => onMouseEnter(e, 4, [330, 220])}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='#'>\n                            Pages\n                        </Link>\n                    </NavItem> */}\n                    {/* <NavItem>\n                        <NavLink\n                            exact\n                            onMouseEnter={resetNavBoc}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/blog'>\n                            blog\n                        </NavLink>\n                    </NavItem> */}\n                    <NavItem>\n                        <NavLink\n                            exact\n                            onMouseEnter={resetNavBoc}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/chat/00000'>\n                            Chat\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            exact\n                            onMouseEnter={resetNavBoc}\n                            className='nav-link position-relative main-nav text-dark'\n                            to='/contactus'>\n                            Contact\n                        </NavLink>\n                    </NavItem>\n                    <SearchButton />\n                </Nav>\n            </Navbar>\n\n            <div\n                className={classnames('menu-container', {\n                    'full-menu-content': [3].includes(activeIndex),\n                })}\n                id='menu-con'>\n                <div className='site-arrow bg-primary'></div>\n                <div className='menu-area' hidden={!visable}>\n                    <div className='menu-card'>\n                        {animatedMenu.map(({ id, component: Component }) => (\n                            <NavBox key={id} id={id} activeIndex={activeIndex}>\n                                <Component />\n                            </NavBox>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Navigation;\n","// External components\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Sticky } from 'react-sticky';\nimport { Navbar, Nav, NavItem } from 'reactstrap';\nimport { Link, NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\n// Own Components\nimport ButtonGroups from './ButtonGroups';\nimport Logo from './Logo';\nimport Navigation from './Navigation';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst Header = () => {\n\n    const token = localStorage.getItem('token');\n    const [visible, setVisible] = useState(false);\n    const resetNavBoc = () => setVisible(false);\n\n    return token ? (\n        <Sticky disableCompensation topOffset={400}>\n            {/* <> */}\n            {({ style, isSticky }) => (\n                <header\n                    style={style}\n                    className={` ${isSticky ? 'sticky-header' : 'position-relative border bg-white'}`}>\n                    <Container fluid>\n                        <Row className='align-items-center '>\n                            <Col xl={2} lg={2} md={2} sm={2} xs={2} className='d-flex'>\n                                <div className='jb-logo'>\n                                    <Logo />\n                                </div>\n                            </Col>\n                            <Col className='nav-col' xl={8} lg={9} md={5} sm={7} xs={5}>\n                                <Navigation />\n                            </Col>\n                            <Col className='p-0' xl={2} lg={1} md={5} sm={3} xs={5}>\n                                <div className='user-info d-flex justify-content-center align-items-center align-self-center text-center'>\n                                    <ButtonGroups />\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </header>\n            )}\n            {/* </> */}\n        </Sticky>\n    ) : (\n        <Sticky disableCompensation topOffset={400}>\n            {({ style, isSticky }) => (\n                <header\n                    style={style}\n                    className={` ${isSticky ? 'sticky-header' : 'position-relative border bg-white'}`}>\n                    <Container fluid>\n                        <Row className='align-items-center '>\n                            <Col xl={2} lg={2} md={2} sm={2} xs={2} className='d-flex'>\n                                <div className='jb-logo'>\n                                    <Logo />\n                                </div>\n                            </Col>\n                            <Col className='nav-col' xl={8} lg={9} md={5} sm={7} xs={5}>\n                                <Navigation />\n                            </Col>\n                            <div\n                                className={classnames('navigation position-relative', {\n                                    'menu-container-visable': visible,\n                                })}>\n                                <Navbar>\n                                    <Nav>\n                                        <NavItem className='dropdown'>\n                                            <NavLink\n                                                className='nav-link position-relative main-nav text-dark'\n                                                to='/signin'\n                                                onMouseEnter={resetNavBoc}>\n                                                Login\n                                            </NavLink>\n                                        </NavItem>\n\n                                        <NavItem className='dropdown'>\n                                            <NavLink\n                                                onMouseEnter={resetNavBoc}\n                                                className='nav-link position-relative main-nav text-dark'\n                                                to='/account/register'>\n                                                Register\n                                            </NavLink>\n                                        </NavItem>\n                                    </Nav>\n                                </Navbar>\n                            </div>\n                        </Row>\n                    </Container>\n                </header>\n            )}\n        </Sticky>\n    );\n};\n\nHeader.propTypes = {\n    //   user: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, {})(Header);\n","import React from 'react';\nimport { Card, CardHeader, CardBody, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\n\nimport featImg1 from 'src/assets/images/Footer/feat-img1.png';\nimport featImg2 from 'src/assets/images/Footer/feat-img2.png';\nimport featImg3 from 'src/assets/images/Footer/feat-img3.png';\nimport featImg4 from 'src/assets/images/Footer/feat-img4.png';\nimport featImg5 from 'src/assets/images/Footer/feat-img5.png';\nimport featImg6 from 'src/assets/images/Footer/feat-img6.png';\nimport { Link } from 'react-router-dom';\n\nconst fooNav = [\n    {\n        title: 'Features',\n        item: [\n            {\n                icon: faSquare,\n                text: 'Job Management & Billing',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Time & Materials Tracking',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Standards Compliance ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Real Time GPS Tracking',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: 'Client Portal',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Powerful Workflow',\n                type: null,\n            },\n        ],\n    },\n    {\n        title: 'Browse',\n        item: [\n            {\n                icon: faSquare,\n                text: 'Freelancers by Category',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in USA ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in UK ',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in Canada',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: ' Freelancers in india',\n                type: null,\n            },\n            {\n                icon: faSquare,\n                text: '  find jobs',\n                type: null,\n            },\n        ],\n    },\n    {\n        title: 'App & Integration',\n        item: [\n            {\n                icon: featImg1,\n                text: 'Xero',\n                type: 'image',\n            },\n            {\n                icon: featImg2,\n                text: ' Reckon',\n                type: 'image',\n            },\n            {\n                icon: featImg3,\n                text: ' Flexidocs',\n                type: 'image',\n            },\n            {\n                icon: featImg4,\n                text: ' Microsoft Exchange',\n                type: 'image',\n            },\n            {\n                icon: featImg5,\n                text: 'Mailchimp',\n                type: 'image',\n            },\n            {\n                icon: featImg6,\n                text: '  MYOB',\n                type: 'image',\n            },\n        ],\n    },\n];\n\nconst FooNav = ({ to }) => {\n    return (\n        <>\n            {fooNav &&\n                fooNav.map((item, i) => (\n                    <Col lg={3} sm={6} key={i}>\n                        <Card className='foo-nav bg-transparent border-0  '>\n                            <CardHeader tag='h5' className='bg-transparent border-0 text-white m-0 pb-4 mt-2 pl-0'>\n                                {item.title}\n                            </CardHeader>\n                            <CardBody tag='ul' className='pl-0 pr-0 '>\n                                {item.item.map((item, i) => (\n                                    <li key={i} className='d-flex'>\n                                        {item.type === 'image' ? (\n                                            <img src={item.icon} alt='feature' className='mb-3' />\n                                        ) : (\n                                            <FontAwesomeIcon\n                                                className='mt-2 text-primary h6 position-relative'\n                                                icon={item.icon}\n                                            />\n                                        )}\n                                        <Link to={to || '#'} className='mb-3 text-muted ml-4'>\n                                            {item.text}\n                                        </Link>\n                                    </li>\n                                ))}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                ))}\n        </>\n    );\n};\n\nexport default FooNav;\n","import React from \"react\";\r\n\r\nexport default function Login() {\r\n  return <div>Login</div>;\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'whatsapp-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ id, children }) {\r\n  const [socket, setSocket] = useState();\r\n  const token = localStorage.getItem(\"token\");\r\n  useEffect(() => {\r\n    if (token) {\r\n      console.log(\"soket useEffct\");\r\n      const newSocket = io(\"https://www.togedoortestgo.site/\", {\r\n        path: \"/graphql/socket/\",\r\n\r\n        withCredentials: true,\r\n        extraHeaders: {\r\n          \"my-custom-header\": \"abcd\",\r\n        },\r\n        query: { token },\r\n      });\r\n      setSocket(newSocket);\r\n\r\n      return () => newSocket.close();\r\n    }\r\n  }, [id]);\r\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { useSocket } from \"./SocketProvider\";\r\nimport ReactNotifications from 'react-browser-notifications';\r\n\r\nconst ConversationsContext = React.createContext();\r\n\r\nvar n;\r\n\r\n//not\r\nlet permission = Notification.permission;\r\nif(permission === \"granted\") {\r\n   showNotification();\r\n} else if(permission === \"default\"){\r\n   requestAndShowPermission();\r\n} else {\r\n  alert(\"Use normal alert\");\r\n}\r\nfunction showNotification() {\r\n   if(document.visibilityState === \"visible\") {\r\n       return;\r\n   }\r\n   var title = \"JavaScript Jeep\";\r\n  //  icon = \"image-url\"\r\n   var body = \"You just received a message\";\r\n   var notification = new Notification('New Message', { body });\r\n   notification.onclick = () => { \r\n          notification.close();\r\n          window.parent.focus();\r\n   }\r\n}\r\nfunction requestAndShowPermission() {\r\n   Notification.requestPermission(function (permission) {\r\n      if (permission === \"granted\") {\r\n            showNotification();\r\n      }\r\n   });\r\n}\r\n\r\n\r\nexport function useConversations() {\r\n  return useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ children }) {\r\n  const [conversations, setConversations] = useLocalStorage(\"conversations\", []);\r\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\r\n\r\n  const [ConversationAndID, setConversationAndID] = useState([]);\r\n\r\n  // var [Isminmized, setIsminmized] = useState(false);\r\n  // useEffect(() => {\r\n  //     window.addEventListener(\r\n    \r\n  //       'blur',\r\n  //       function () {\r\n  //         // setIsminmized(true)\r\n  //           console.log('blur');\r\n  // Isminmized=true\r\n  //       },\r\n  //       false\r\n  //   );\r\n    \r\n  //   window.addEventListener(\r\n  //       'focus',\r\n  //       function () {\r\n  //         // setIsminmized(false)\r\n  //       Isminmized=false\r\n  //           console.log('focus');\r\n  //       },\r\n  //       false\r\n  //   );\r\n  //   },[])\r\n\r\n  if (false) {\r\n    conversations;\r\n    selectedConversationIndex;\r\n  }\r\n\r\n  const socket = useSocket();\r\n\r\n  function createConversation(recipients) {\r\n    setConversations((prevConversations) => {\r\n      return [...prevConversations, { recipients, messages: [] }];\r\n    });\r\n  }\r\n\r\n const addMessageToConversation = useCallback(({ text }) => {\r\n  // const addMessageToConversation = ({ text }) => {\r\n    setConversationAndID(text);\r\nconsole.log('test');\r\nconsole.log(text);\r\n\r\n\r\nconsole.log(\"on. reseved\")\r\nvar Isminmized = localStorage.getItem('Isminmized');\r\n\r\n// console.log(Isminmized);\r\n// if(Isminmized=='true'){console.log(\"push notefication\");\r\n\r\n\r\n\r\n\r\n\r\n\r\nshowNotification()\r\n\r\n\r\n    function showNotifications() {\r\n        // If the Notifications API is supported by the browser\r\n        // then show the notification\r\n        if (n.supported()) n.show();\r\n    }\r\n\r\n    // showNotifications() \r\n \r\n\r\n// } //if\r\n\r\n \r\n  // }\r\n}, []);\r\n  function handleClick(event) {\r\n    // Do something here such as\r\n    // console.log(\"Notification Clicked\") OR\r\n    // window.focus() OR\r\n  window.open(\"http://localhost:3000/chat/00000\")\r\n\r\n    // Lastly, Close the notification\r\n    n.close(event.target.tag);\r\n}\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = localStorage.getItem(\"id\");\r\n      try {\r\n        const response = await axios.get(\"https://www.togedoortestgo.site/graphql/accounts/\" + id);\r\n        setConversationAndID(response.data.conversations);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket == null) return;\r\n\r\n    socket.on(\"receive-message\", addMessageToConversation);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    return () => socket.off(\"receive-message\");\r\n  }, [socket, addMessageToConversation]);\r\n\r\n  function sendMessage(recipients, text) {\r\n    if (socket){\r\n    socket.emit(\"send-message\", { recipients, text });}\r\n\r\n    // addMessageToConversation({ recipients, text, sender: id })\r\n  }\r\n\r\n  function Chatting(id) {\r\n    const MyId = localStorage.getItem(\"id\");\r\n    socket.emit(\"Chatting\", { id, MyId });\r\n    console.log(\"chat id\");\r\n    console.log(id);\r\n  }\r\n\r\n  function FuncIsmimized(status) {\r\n    const MyId = localStorage.getItem(\"id\");\r\n    try {\r\n      \r\n      socket.emit(\"isminmized\", { isminmized:status, MyId });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n  function  FuncDeleteConversation(deleteId) {\r\n    const MyId = localStorage.getItem(\"id\");\r\n    try {\r\n      \r\n      socket.emit(\"Delete\", {  DeleteId:deleteId });\r\n      console.log(\"delete id is\" + deleteId.ConnectedUserID);\r\n      window.location.reload(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n \r\n  const value = {\r\n    conversations: ConversationAndID,\r\n    selectedConversation: \"val test\",\r\n    sendMessage,\r\n    Chatting,\r\n    FuncIsmimized,\r\n    FuncDeleteConversation,\r\n    selectConversationIndex: setSelectedConversationIndex,\r\n    createConversation,\r\n  };\r\n\r\n\r\n\r\n  return <ConversationsContext.Provider value={value}>{children}\r\n  \r\n  {/* <ReactNotifications\r\n  onRef={(ref) => (n = ref)} // Required\r\n  title='New Message!' // Required\r\n  body='You just received a message'\r\n  icon=''\r\n  tag='abcdef'\r\n  timeout='2000'\r\n  onClick={(event) => handleClick(event)}\r\n/>\r\n   */}\r\n  </ConversationsContext.Provider>;\r\n}\r\n\r\n\r\n\r\n\r\nfunction arrayEquality(a, b) {\r\n  if (a.length !== b.length) return false;\r\n\r\n  a.sort();\r\n  b.sort();\r\n\r\n  return a.every((element, index) => {\r\n    return element === b[index];\r\n  });\r\n}\r\nif (false) {\r\n  arrayEquality;\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { ListGroup,Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { connect } from \"rxjs\";\r\nvar ChattingWith \r\nexport default function Conversations() {\r\n  const { conversations, Chatting,FuncDeleteConversation } = useConversations();\r\n\r\n    // const[ChattingWith,setChattingWith]=    useState('no')\r\n    ChattingWith = localStorage.getItem('ChattingWith');\r\n  const submit = (ConnectedUserID) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete conversation',\r\n      message: 'Are you sure to delete the conversation ?.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {FuncDeleteConversation({ConnectedUserID:ConnectedUserID})}\r\n        },\r\n        {\r\n          label: 'No',\r\n          // onClick: () => alert('Click No')\r\n        }\r\n      ]\r\n    })\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <ListGroup variant='flush'>\r\n\r\n      {conversations[0]\r\n        ? conversations.map ( (conversation, index) => (\r\n          <div>\r\n            <Link  to={\"/chat/\" + conversation.ConnectedUserID}>\r\n              <ListGroup.Item style={{width:\"100px\" ,float:\"left\"}}\r\n                onClick={() => {\r\n                  localStorage.setItem('ChattingWith',conversation.firstname )\r\n                  Chatting(conversation.ConnectedUserID);\r\n                  setTimeout(() => {\r\n               \r\n                    window.location.reload(false);\r\n                  }, 500);\r\n                  // localStorage.setItem('ChattingWith','no' )\r\n ChattingWith = localStorage.getItem('ChattingWith');\r\n                }}\r\n                key={index}\r\n                action>\r\n                {conversation.firstname}\r\n               \r\n                \r\n                {/* <div className=\"w3-padding w3-xlarge w3-teal\"> */}\r\n    \r\n   \r\n   \r\n  {/* </div> */}\r\n\r\n              </ListGroup.Item>\r\n            </Link>\r\n          <div>\r\n           <span onClick={()=>{submit(conversation.ConnectedUserID)}} style={{float:\"right\", marginTop:\"20px\", marginRight:\"20px\"}} className=\"w3-xxlarge fa fa-trash\"  >\r\n\r\n             {/* <i className=\"w3-xxlarge fa fa-trash\"></i> */}\r\n           </span>\r\n</div>\r\n\r\n           <div\r\n                  style={{\r\n\r\n                    paddingTop: \"4px\",\r\n                    paddingBottom: \"4px\",\r\n                    paddingRight: \"7px\",\r\n                    paddingLeft: \"7px\",\r\n                    backgroundColor: \"red\",\r\n                    color: \"white\",\r\n                  \r\n                    top: \"6px\",\r\n                    right: \"20px\",\r\n                    fontSize: \".7em\",\r\n                    borderRadius: \"30px\",\r\n                    marginTop: \"5px\",\r\n                   \r\n                    float:\"right\"\r\n                  }}\r\n                  className='badge alert'>\r\n                  {(conversation.notRead>0)?conversation.notRead:''}\r\n                </div>\r\n          \r\n\r\n\r\n             </div>\r\n          ))\r\n        : \"no con\"}\r\n    \r\n    </ListGroup>\r\n   \r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function Contacts() {\r\n  return <ListGroup variant='flush'>Contacts comp</ListGroup>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NewContactModal() {\r\n  return <div>NewContactModal</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NewConversationModal() {\r\n  return <div>NewConversationModal</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Tab, Nav, Button, Modal } from \"react-bootstrap\";\r\nimport Conversations from \"./Conversations\";\r\nimport Contacts from \"./ContactsOLD\";\r\nimport NewContactModal from \"./NewContactModal\";\r\nimport NewConversationModal from \"./NewConversationModal\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\nimport { Media } from \"reactstrap\";\r\nvar  ChattingWith = localStorage.getItem('ChattingWith');\r\nconst CONVERSATIONS_KEY = \"conversations\";\r\nconst CONTACTS_KEY = \"contacts\";\r\n\r\nexport default function Sidebar({ id }) {\r\n  const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const { conversations } = useConversations();\r\n  const conversationsOpen = activeKey === CONVERSATIONS_KEY;\r\n\r\n  function closeModal() {\r\n    setModalOpen(false);\r\n  }\r\n  console.log(\"conversations from side bar\");\r\n  console.log(conversations);\r\n\r\n  return (\r\n    <div style={{ width: \"250px\" }} className='d-flex flex-column'>\r\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n        <Nav variant='tabs' className='justify-content-center'>\r\n          <Nav.Item>\r\n            {/* <Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link> */}\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            {/* <Nav.Link eventKey={CONTACTS_KEY}>Contacts</Nav.Link> */}\r\n          </Nav.Item>\r\n        </Nav>\r\n        <Tab.Content className='border-right overflow-auto flex-grow-1'>\r\n\r\n          <Tab.Pane eventKey={CONVERSATIONS_KEY}>{conversations ? <Conversations /> : \"no conn\"}</Tab.Pane>\r\n          <Tab.Pane eventKey={CONTACTS_KEY}>\r\n            <Contacts />\r\n          </Tab.Pane>\r\n        </Tab.Content>\r\n\r\n        <div className='p-2 border-top border-right small'>\r\n\r\n        <Media left>\r\n                                <Media\r\n                                    object\r\n                                    src={'https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=200&q=80'}\r\n                                    alt=\"user profile\"\r\n                                    width=\"50px\"\r\n                                    style={{ marginTop: '10px' }}\r\n                                    height=\"40px\"\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </Media>\r\n          <h4 className='text-muted'>  {  ChattingWith}</h4>\r\n          <br></br>\r\n          <br></br>\r\n\r\n          \r\n        </div>\r\n        {/* <Button onClick={() => setModalOpen(true)} className='rounded-0'>\r\n          New {conversationsOpen ? \"Conversation\" : \"Contact\"}\r\n        </Button> */}\r\n      </Tab.Container>\r\n\r\n      <Modal show={modalOpen} onHide={closeModal}>\r\n        {conversationsOpen ? (\r\n          <NewConversationModal closeModal={closeModal} />\r\n        ) : (\r\n          <NewContactModal closeModal={closeModal} />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { useState, useCallback ,useRef} from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nfunction OpenConversation({ match }) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const setRef = useCallback((node) => {\r\n    if (node) {\r\n      console.log(\"node\");\r\n      console.log(node);\r\n      node.scrollIntoView({ smooth: true });\r\n    }\r\n  }, []);\r\n\r\n  // const setRef=(node) => {\r\n  //   if (node) {\r\n  //     node.scrollIntoView({ smooth: true });\r\n  //   }\r\n  // }\r\n\r\n\r\n  if (false) {\r\n    setRef;\r\n  }\r\n\r\n\r\n//  const divRef = useRef()\r\n  \r\n\r\n\r\n  \r\n  const { sendMessage, conversations } = useConversations();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // const scrollToTop = () => {\r\n    //   window.scrollTo({\r\n    //     top: 0,\r\n    //     behavior: \"smooth\"\r\n    //   });\r\n    // };\r\n    // scrollToTop()\r\n\r\n\r\n    sendMessage([match.params.id], text);\r\n    setText(\"\");\r\n \r\n  }\r\n  console.log(\"OpenConversation \");\r\n  console.log(conversations);\r\n  if (conversations[0]) console.log(conversations[0].ConnectedUserID);\r\n\r\n  console.log(\"match.params.id\");\r\n  console.log(match.params.id);\r\n  const getConversationById = () => {\r\n    try {\r\n      let ObjWithConversation = conversations.find(({ ConnectedUserID }) => ConnectedUserID == match.params.id);\r\n      var Messages = ObjWithConversation.Topic.map((topic, index) => {\r\n        const lastMessage = ObjWithConversation.Topic.length - 1 === index\r\n\r\n        return (\r\n          <div \r\n          ref={lastMessage ? setRef : null}\r\n            key={index}\r\n            className={`my-1 d-flex flex-column ${\r\n              topic.substring(0, 8) == \"@?FX56##\" ? \"align-self-end align-items-end\" : \"align-items-start\"\r\n            }`}>\r\n            <div\r\n              className={`rounded px-2 py-1 ${\r\n                topic.substring(0, 8) == \"@?FX56##\" ? \"bg-primary text-white\" : \"border\"\r\n              }`}>\r\n              {topic.substring(0, 8) == \"@?FX56##\" ? topic.substring(8, topic.length) : topic}\r\n            </div>\r\n            <div   className={`text-muted small ${topic.substring(0, 8) == \"@?FX56##\" ? \"text-right\" : \"\"}`}>\r\n              {topic.substring(0, 8) == \"@?FX56##\" ? \"You\" : \"Him\"}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return Messages;\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex flex-column flex-grow-1'  >\r\n      <div className='flex-grow-1 overflow-auto' >\r\n        <div className='d-flex flex-column align-items-start justify-content-end px-3'  >\r\n          {conversations[0] ? getConversationById() : \"no\"}\r\n        </div>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className='m-2'>\r\n          <InputGroup>\r\n            <Form.Control\r\n              as='textarea'\r\n              required\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              style={{ height: \"75px\", resize: \"none\" }}\r\n            />\r\n            <InputGroup.Append>\r\n              <Button type='submit' >Send</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(OpenConversation);\r\n","import React, { useState } from 'react'\r\nimport Sidebar from './Sidebar';\r\nimport OpenConversation from './OpenConversation';\r\nimport { useConversations } from '../contexts/ConversationsProvider';\r\n\r\nexport default function Dashboard({ id }) {\r\n  const { selectedConversation } = useConversations()\r\nconst [show,setshow]=useState(true)\r\nconst funcShow=()=>{\r\n  if(show)return(<Sidebar id={id} />)\r\n  \r\n  \r\n}\r\n  return (\r\n    <div>\r\n    <button className='btn btn-primary' onClick={()=>{setshow(!show)}}  >Show Conversation</button>\r\n    <div className=\"d-flex\" style={{ height: '100vh' }}>\r\n      \r\n    {funcShow()}\r\n      {selectedConversation && <OpenConversation />}\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst ContactsContext = React.createContext();\r\n\r\nexport function useContacts() {\r\n  return useContext(ContactsContext);\r\n}\r\n\r\nexport function ContactsProvider({ children }) {\r\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\r\n  console.log(\"contacts\");\r\n  console.log(contacts);\r\n\r\n  function createContact(id, name) {\r\n    setContacts((prevContacts) => {\r\n      return [...prevContacts, { id, name }];\r\n    });\r\n  }\r\n\r\n  return <ContactsContext.Provider value={{ contacts, createContact }}>{children}</ContactsContext.Provider>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Login from './Login';\r\nimport Dashboard from './Dashboard';\r\nimport { ContactsProvider } from '../contexts/ContactsProvider';\r\nimport { ConversationsProvider } from '../contexts/ConversationsProvider';\r\nimport { SocketProvider } from '../contexts/SocketProvider';\r\nimport { withRouter } from 'react-router-dom';\r\n// import ReactNotifications from 'react-browser-notifications';\r\n\r\n\r\nimport { useBeforeunload } from 'react-beforeunload';\r\n\r\n// var n;\r\n\r\nfunction Chat({ match: { params } }) {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    function funcrender() {\r\n      if(render){ return <div>render</div>}\r\n     \r\n      \r\n    }\r\n    \r\n\r\n\r\n\r\n    useBeforeunload((event) => {\r\n      if (value !== '') {\r\n        event.preventDefault();\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n    // function showNotifications() {\r\n    //     // If the Notifications API is supported by the browser\r\n    //     // then show the notification\r\n    //     if (n.supported()) n.show();\r\n    // }\r\n    // function handleClick(event) {\r\n    //     // Do something here such as\r\n    //     // console.log(\"Notification Clicked\") OR\r\n    //     // window.focus() OR\r\n    //     // window.open(\"http://www.google.com\")\r\n\r\n    //     // Lastly, Close the notification\r\n    //     n.close(event.target.tag);\r\n    // }\r\n\r\n    const id = localStorage.getItem('id');\r\n    // console.log('par');\r\n    // console.log(params);\r\n    const dashboard = (\r\n\r\n\r\n          \r\n        \r\n    \r\n\r\n<div>\r\n         \r\n                {/* <button\r\n                    className='btn btn-primary'\r\n                    onClick={() => {\r\n                        // showNotifications();\r\n                        showNotification()\r\n                    }}>\r\n                    primaryBtn\r\n                </button> */}\r\n                {/* <ReactNotifications\r\n                    onRef={(ref) => (n = ref)} // Required\r\n                    title='Hey There!' // Required\r\n                    body='This is the body'\r\n                    icon='icon.png'\r\n                    tag='abcdef'\r\n                    timeout='9000'\r\n                    onClick={(event) => handleClick(event)}\r\n                /> */}\r\n\r\n              \r\n                    <Dashboard id={id} />\r\n              \r\n                {/* <input onChange={(event) => setValue(event.target.value)} value={value} /> */}\r\n         \r\n   \r\n      </div>\r\n    );\r\n\r\n    return id ? dashboard : <Login onIdSubmit={id} />;\r\n}\r\n\r\nexport default withRouter(Chat);\r\n","import { alertService } from '../services';\nimport { Role } from '.';\n// import { alertService } from '@/_services';\n\n// array in local storage for registered users\nconst usersKey = 'react-signup-verification-boilerplate-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\n\nexport function configureFakeBackend() {\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(handleRoute, 500);\n\n            function handleRoute() {\n                const { method } = opts;\n                switch (true) {\n                    case url.endsWith('/accounts/authenticate') && method === 'POST':\n                        return authenticate();\n                    case url.endsWith('/accounts/refresh-token') && method === 'POST':\n                        return refreshToken();\n                    case url.endsWith('/accounts/revoke-token') && method === 'POST':\n                        return revokeToken();\n                    case url.endsWith('/accounts/register') && method === 'POST':\n                        return register();\n                    case url.endsWith('/accounts/verify-email') && method === 'POST':\n                        return verifyEmail();\n                    case url.endsWith('/accounts/forgot-password') && method === 'POST':\n                        return forgotPassword();\n                    case url.endsWith('/accounts/validate-reset-token') && method === 'POST':\n                        return validateResetToken();\n                    case url.endsWith('/accounts/reset-password') && method === 'POST':\n                        return resetPassword();\n                    case url.endsWith('/accounts') && method === 'GET':\n                        return getUsers();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'GET':\n                        return getUserById();\n                    case url.endsWith('/accounts') && method === 'POST':\n                        return createUser();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'PUT':\n                        return updateUser();\n                    case url.match(/\\/accounts\\/\\d+$/) && method === 'DELETE':\n                        return deleteUser();\n                    default:\n                        // pass through any requests not handled above\n                        return realFetch(url, opts)\n                            .then((response) => resolve(response))\n                            .catch((error) => reject(error));\n                }\n            }\n\n            // route functions\n\n            function authenticate() {\n                const { email, password } = body();\n                const user = users.find((x) => x.email === email && x.password === password && x.isVerified);\n\n                if (!user) return error('Email or password is incorrect');\n\n                // add refresh token to user\n                user.refreshTokens.push(generateRefreshToken());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                    jwtToken: generateJwtToken(user),\n                });\n            }\n\n            function refreshToken() {\n                const refreshToken = getRefreshToken();\n\n                if (!refreshToken) return unauthorized();\n\n                const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n                if (!user) return unauthorized();\n\n                // replace old refresh token with a new one and save\n                user.refreshTokens = user.refreshTokens.filter((x) => x !== refreshToken);\n                user.refreshTokens.push(generateRefreshToken());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                    jwtToken: generateJwtToken(user),\n                });\n            }\n\n            function revokeToken() {\n                if (!isAuthenticated()) return unauthorized();\n\n                const refreshToken = getRefreshToken();\n                const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n                // revoke token and save\n                user.refreshTokens = user.refreshTokens.filter((x) => x !== refreshToken);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function register() {\n                const user = body();\n\n                if (users.find((x) => x.email === user.email)) {\n                    // display email already registered \"email\" in alert\n                    setTimeout(() => {\n                        alertService.info(\n                            `\n                            <h4>Email Already Registered</h4>\n                            <p>Your email ${user.email} is already registered.</p>\n                            <p>If you don't know your password please visit the <a href=\"${window.location.origin}/account/forgot-password\">forgot password</a> page.</p>\n                            <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                        `,\n                            { autoClose: false }\n                        );\n                    }, 1000);\n\n                    // always return ok() response to prevent email enumeration\n                    return ok();\n                }\n\n                // assign user id and a few other properties then save\n                user.id = newUserId();\n                if (user.id === 1) {\n                    // first registered user is an admin\n                    user.role = Role.Admin;\n                } else {\n                    user.role = Role.User;\n                }\n                user.dateCreated = new Date().toISOString();\n                user.verificationToken = new Date().getTime().toString();\n                user.isVerified = false;\n                user.refreshTokens = [];\n                delete user.confirmPassword;\n                users.push(user);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                // display verification email in alert\n                setTimeout(() => {\n                    const verifyUrl = `${window.location.origin}/account/verify-email?token=${user.verificationToken}`;\n                    alertService.info(\n                        `\n                        <h4>Verification Email</h4>\n                        <p>Thanks for registering!</p>\n                        <p>Please click the below link to verify your email address:</p>\n                        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n                        { autoClose: false }\n                    );\n                }, 1000);\n\n                return ok();\n            }\n\n            function verifyEmail() {\n                const { token } = body();\n                const user = users.find((x) => !!x.verificationToken && x.verificationToken === token);\n\n                if (!user) return error('Verification failed');\n\n                // set is verified flag to true if token is valid\n                user.isVerified = true;\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function forgotPassword() {\n                const { email } = body();\n                const user = users.find((x) => x.email === email);\n\n                // always return ok() response to prevent email enumeration\n                if (!user) return ok();\n\n                // create reset token that expires after 24 hours\n                user.resetToken = new Date().getTime().toString();\n                user.resetTokenExpires = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                // display password reset email in alert\n                setTimeout(() => {\n                    const resetUrl = `${window.location.origin}/account/reset-password?token=${user.resetToken}`;\n                    alertService.info(\n                        `\n                        <h4>Reset Password Email</h4>\n                        <p>Please click the below link to reset your password, the link will be valid for 1 day:</p>\n                        <p><a href=\"${resetUrl}\">${resetUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n                        { autoClose: false }\n                    );\n                }, 1000);\n\n                return ok();\n            }\n\n            function validateResetToken() {\n                const { token } = body();\n                const user = users.find(\n                    (x) => !!x.resetToken && x.resetToken === token && new Date() < new Date(x.resetTokenExpires)\n                );\n\n                if (!user) return error('Invalid token');\n\n                return ok();\n            }\n\n            function resetPassword() {\n                const { token, password } = body();\n                const user = users.find(\n                    (x) => !!x.resetToken && x.resetToken === token && new Date() < new Date(x.resetTokenExpires)\n                );\n\n                if (!user) return error('Invalid token');\n\n                // update password and remove reset token\n                user.password = password;\n                user.isVerified = true;\n                delete user.resetToken;\n                delete user.resetTokenExpires;\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function getUsers() {\n                if (!isAuthorized(Role.Admin)) return unauthorized();\n\n                return ok(users);\n            }\n\n            function getUserById() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can get own profile and admins can get all profiles\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                return ok(user);\n            }\n\n            function createUser() {\n                if (!isAuthorized(Role.Admin)) return unauthorized();\n\n                const user = body();\n                if (users.find((x) => x.email === user.email)) {\n                    return error(`Email ${user.email} is already registered`);\n                }\n\n                // assign user id and a few other properties then save\n                user.id = newUserId();\n                user.dateCreated = new Date().toISOString();\n                user.isVerified = true;\n                user.refreshTokens = [];\n                delete user.confirmPassword;\n                users.push(user);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok();\n            }\n\n            function updateUser() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let params = body();\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can update own profile and admins can update all profiles\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                // only update password if included\n                if (!params.password) {\n                    delete params.password;\n                }\n                // don't save confirm password\n                delete params.confirmPassword;\n\n                // update and save user\n                Object.assign(user, params);\n                localStorage.setItem(usersKey, JSON.stringify(users));\n\n                return ok({\n                    id: user.id,\n                    email: user.email,\n                    title: user.title,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    role: user.role,\n                });\n            }\n\n            function deleteUser() {\n                if (!isAuthenticated()) return unauthorized();\n\n                let user = users.find((x) => x.id === idFromUrl());\n\n                // users can delete own account and admins can delete any account\n                if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n                    return unauthorized();\n                }\n\n                // delete user then save\n                users = users.filter((x) => x.id !== idFromUrl());\n                localStorage.setItem(usersKey, JSON.stringify(users));\n                return ok();\n            }\n\n            // helper functions\n\n            function ok(body) {\n                resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) });\n            }\n\n            function unauthorized() {\n                resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorized' })) });\n            }\n\n            function error(message) {\n                resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) });\n            }\n\n            function isAuthenticated() {\n                return !!currentUser();\n            }\n\n            function isAuthorized(role) {\n                const user = currentUser();\n                if (!user) return false;\n                return user.role === role;\n            }\n\n            function idFromUrl() {\n                const urlParts = url.split('/');\n                return parseInt(urlParts[urlParts.length - 1]);\n            }\n\n            function body() {\n                return opts.body && JSON.parse(opts.body);\n            }\n\n            function newUserId() {\n                return users.length ? Math.max(...users.map((x) => x.id)) + 1 : 1;\n            }\n\n            function generateJwtToken(user) {\n                // create token that expires in 15 minutes\n                const tokenPayload = {\n                    exp: Math.round(new Date(Date.now() + 15 * 60 * 1000).getTime() / 1000),\n                    id: user.id,\n                };\n                return `fake-jwt-token.${btoa(JSON.stringify(tokenPayload))}`;\n            }\n\n            function currentUser() {\n                // check if jwt token is in auth header\n                const authHeader = opts.headers['Authorization'] || '';\n                if (!authHeader.startsWith('Bearer fake-jwt-token')) return;\n\n                // check if token is expired\n                const jwtToken = JSON.parse(atob(authHeader.split('.')[1]));\n                const tokenExpired = Date.now() > jwtToken.exp * 1000;\n                if (tokenExpired) return;\n\n                const user = users.find((x) => x.id === jwtToken.id);\n                return user;\n            }\n\n            function generateRefreshToken() {\n                const token = new Date().getTime().toString();\n\n                // add token cookie that expires in 7 days\n                const expires = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toUTCString();\n                document.cookie = `fakeRefreshToken=${token}; expires=${expires}; path=/`;\n\n                return token;\n            }\n\n            function getRefreshToken() {\n                // get refresh token from cookie\n                return (document.cookie.split(';').find((x) => x.includes('fakeRefreshToken')) || '=').split('=')[1];\n            }\n        });\n    };\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { accountService, alertService } from \"../services\";\n\nfunction VerifyEmail({ history }) {\n  const EmailStatus = {\n    Verifying: \"Verifying\",\n    Failed: \"Failed\",\n  };\n\n  const emailStatus = EmailStatus.Verifying;\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n    const RemoveKoken = async () => {\n      await accountService.verifyEmail(token);\n\n      console.log(\" verify token\");\n      alertService.success(\"Verification successful, you can now login\", { keepAfterRouteChange: true });\n      history.push(\"/signin\");\n    }; // end RemoveKoken func\n    RemoveKoken();\n  }, []);\n\n  function getBody() {\n    switch (emailStatus) {\n      case EmailStatus.Verifying:\n        return <div>Verifying...</div>;\n      case EmailStatus.Failed:\n        return (\n          <div>\n            Verification failed, you can also verify your account using the{\" \"}\n            <Link to='forgot-password'>forgot password</Link> page.\n          </div>\n        );\n    }\n  }\n\n  return (\n    <>\n      <h3 className='card-header'>Verify Email</h3>\n      <div className='card-body'>{getBody()}</div>\n    </>\n  );\n}\n\nexport { VerifyEmail };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// import { accountService, alertService } from '@/_services';\nimport { accountService, alertService } from '../services';\n\nfunction ForgotPassword() {\n    const initialValues = {\n        email: ''\n    };\n\n    const validationSchema = Yup.object().shape({\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required')\n    });\n\n    function onSubmit({ email }, { setSubmitting }) {\n        alertService.clear();\n        accountService.forgotPassword(email)\n            .then(() => alertService.success('Please check your email for password reset instructions'))\n            .catch(error => alertService.error(error))\n            .finally(() => setSubmitting(false));\n    }\n\n    return (\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n            {({ errors, touched, isSubmitting }) => (\n                <Form>\n                    <h3 className=\"card-header\">Forgot Password</h3>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col\">\n                                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Submit\n                                </button>\n                                <Link to=\"/signin\" className=\"btn btn-link\">Cancel</Link>\n                            </div>\n                        </div>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport { ForgotPassword };","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// import { accountService, alertService } from '@/_services';\nimport { accountService, alertService } from '../services';\nfunction ResetPassword({ history }) {\n    const TokenStatus = {\n        Validating: 'Validating',\n        Valid: 'Valid',\n        Invalid: 'Invalid'\n    }\n\n    const [token, setToken] = useState(null);\n    const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\n\n    useEffect(() => {\n        const { token } = queryString.parse(window.location.search);\n\n        // remove token from url to prevent http referer leakage\n        history.replace(window.location.pathname);\n\n        accountService.validateResetToken(token)\n            .then(() => {\n                setToken(token);\n                setTokenStatus(TokenStatus.Valid);\n            })\n            .catch(() => {\n                setTokenStatus(TokenStatus.Invalid);\n            });\n    }, []);\n\n    function getForm() {\n        const initialValues = {\n            password: '',\n            confirmPassword: ''\n        };\n\n        const validationSchema = Yup.object().shape({\n            password: Yup.string()\n                .min(6, 'Password must be at least 6 characters')\n                .required('Password is required'),\n            confirmPassword: Yup.string()\n                .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                .required('Confirm Password is required'),\n        });\n\n        function onSubmit({ password, confirmPassword }, { setSubmitting }) {\n            alertService.clear();\n            accountService.resetPassword({ token, password, confirmPassword })\n                .then(() => {\n                    alertService.success('Password reset successful, you can now login', { keepAfterRouteChange: true });\n                    history.push('/signin');\n                })\n                .catch(error => {\n                    setSubmitting(false);\n                    alertService.error(error);\n                });\n        }\n\n        return (\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n                {({ errors, touched, isSubmitting }) => (\n                    <Form>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm Password</label>\n                            <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col\">\n                                <button type=\"submit\" disabled={isSubmitting} className=\"btn btn-primary\">\n                                    {isSubmitting && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\n                                    Reset Password\n                                </button>\n                                <Link to=\"/signin\" className=\"btn btn-link\">Cancel</Link>\n                            </div>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        );\n    }\n\n    function getBody() {\n        switch (tokenStatus) {\n            case TokenStatus.Valid:\n                return getForm();\n            case TokenStatus.Invalid:\n                return <div>Token validation failed, if the token has expired you can get a new one at the <Link to=\"forgot-password\">forgot password</Link> page.</div>;\n            case TokenStatus.Validating:\n                return <div>Validating token...</div>;\n        }\n    }\n\n    return (\n        <>\n            <h3 className=\"card-header\">Reset Password</h3>\n            <div className=\"card-body\">{getBody()}</div>\n        </>\n    )\n}\n\nexport { ResetPassword };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { accountService, alertService } from \"../services\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { login } from \"src/redux/auth/thunks\";\n\nconst baseUrl = `${\"https://www.togedoortestgo.site/graphql\"}/accounts`;\n\nfunction Login({ history, location }) {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  function authHeader(url) {\n    // return auth header with jwt if user is logged in and request is to the api url\n    const user = accountService.userValue;\n    const isLoggedIn = user && user.jwtToken;\n    const isApiUrl = url.startsWith(\"https://www.togedoortestgo.site/graphql\");\n    if (isLoggedIn && isApiUrl) {\n      return { Authorization: `Bearer ${user.jwtToken}` };\n    } else {\n      return {};\n    }\n  }\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  function onSubmit({ email, password }, { setSubmitting }) {\n    alertService.clear();\n\n    const body = { email: email, password: password };\n    var config1 = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...authHeader(`${baseUrl}/authenticate`),\n      },\n    };\n\n    axios\n      .post(`${baseUrl}/authenticate`, body, config1)\n\n      .then((res) => {\n        console.log(\"after then\");\n        console.log(res);\n        login(res);\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        history.push(from);\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className='card-header'>Login</h3>\n          <div className='card-body'>\n            <div className='form-group'>\n              <label>Email</label>\n              <Field\n                name='email'\n                type='text'\n                className={\"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='email' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-group'>\n              <label>Password</label>\n              <Field\n                name='password'\n                type='password'\n                className={\"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='password' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <button type='submit' disabled={isSubmitting} className='btn btn-primary'>\n                  {isSubmitting && <span className='spinner-border spinner-border-sm mr-1'></span>}\n                  Login\n                </button>\n                <Link to='register' className='btn btn-link'>\n                  Register\n                </Link>\n              </div>\n              <div className='form-group col text-right'>\n                <Link to='forgot-password' className='btn btn-link pr-0'>\n                  Forgot Password?\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n// export { Login };\n\n// Login.propTypes = {\n//     login: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool,\n//   };\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { accountService, alertService } from \"../services\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"src/redux/auth/thunks\";\n\nfunction Register({ history, isAuthenticated }) {\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    location: \" \",\n    jobTitle: \" \",\n    aboutMe: \" \",\n    acceptTerms: false,\n    picture: 'https://images.unsplash.com/photo-1511367461989-f85a21fda167?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=200&q=80'\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf([true], \"Accept Terms & Conditions is required\"),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    console.log('Registration successful');\n    console.log(fields);\n\n    accountService\n      .register(fields)\n      .then((res) => {\n        console.log('res in the register ');\n        console.log(res);\n        // Alert('ffffff')\n        // ...options, type: AlertType.Success, message })\n        alert(\"Registration successful, please check your email for verification instructions\")\n\n        alertService.success(\"Registration successful, please check your email for verification instructions\", {\n          keepAfterRouteChange: true,\n        });\n        // history.push(\"login\");\n        history.push(\"/signin\");\n        // return <Redirect to='/signin' />\n\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n  console.log(\"isAuthenticated\");\n  console.log(isAuthenticated);\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className='card-header'>Register</h3>\n          <div className='card-body'>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <label>Title</label>\n                <Field\n                  name='title'\n                  as='select'\n                  className={\"form-control\" + (errors.title && touched.title ? \" is-invalid\" : \"\")}>\n                  <option value=''></option>\n                  <option value='Mr'>Mr</option>\n                  <option value='Mrs'>Mrs</option>\n                  <option value='Miss'>Miss</option>\n                  <option value='Ms'>Ms</option>\n                </Field>\n                <ErrorMessage name='title' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col-5'>\n                <label>First Name</label>\n                <Field\n                  name='firstName'\n                  type='text'\n                  className={\"form-control\" + (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='firstName' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col-5'>\n                <label>Last Name</label>\n                <Field\n                  name='lastName'\n                  type='text'\n                  className={\"form-control\" + (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='lastName' component='div' className='invalid-feedback' />\n              </div>\n            </div>\n            <div className='form-group'>\n              <label>Email</label>\n              <Field\n                name='email'\n                type='text'\n                className={\"form-control\" + (errors.email && touched.email ? \" is-invalid\" : \"\")}\n              />\n              <ErrorMessage name='email' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-row'>\n              <div className='form-group col'>\n                <label>Password</label>\n                <Field\n                  name='password'\n                  type='password'\n                  className={\"form-control\" + (errors.password && touched.password ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='password' component='div' className='invalid-feedback' />\n              </div>\n              <div className='form-group col'>\n                <label>Confirm Password</label>\n                <Field\n                  name='confirmPassword'\n                  type='password'\n                  className={\"form-control\" + (errors.confirmPassword && touched.confirmPassword ? \" is-invalid\" : \"\")}\n                />\n                <ErrorMessage name='confirmPassword' component='div' className='invalid-feedback' />\n              </div>\n            </div>\n            <div className='form-group form-check'>\n              <Field\n                type='checkbox'\n                name='acceptTerms'\n                id='acceptTerms'\n                className={\"form-check-input \" + (errors.acceptTerms && touched.acceptTerms ? \" is-invalid\" : \"\")}\n              />\n              <label htmlFor='acceptTerms' className='form-check-label'>\n                Accept Terms & Conditions\n              </label>\n              <ErrorMessage name='acceptTerms' component='div' className='invalid-feedback' />\n            </div>\n            <div className='form-group'>\n              <button type='submit' disabled={isSubmitting} className='btn btn-primary'>\n                {isSubmitting && <span className='spinner-border spinner-border-sm mr-1'></span>}\n                Register\n              </button>\n              <Link to='/' className='btn btn-link'>\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { VerifyEmail } from \"./VerifyEmail\";\nimport { ForgotPassword } from \"./ForgotPassword\";\nimport { ResetPassword } from \"./ResetPassword\";\nimport Login from \"./Login\";\nimport store from \"src/store\";\nimport Register from \"./Register\";\n\nfunction Account({ match }) {\n  const { path } = match;\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-sm-8 offset-sm-2 mt-5'>\n          <div className='card m-3'>\n            <Provider store={store}>\n              <Switch>\n                <Route path={`${path}/login`} component={Login} />\n                <Route path={`${path}/register`} component={Register} />\n                <Route path={`${path}/verify-email`} component={VerifyEmail} />\n                <Route path={`${path}/forgot-password`} component={ForgotPassword} />\n                <Route path={`${path}/reset-password`} component={ResetPassword} />\n              </Switch>\n            </Provider>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Account };\n","import React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, withRouter, useLocation, Redirect } from 'react-router-dom';\nimport { StickyContainer } from 'react-sticky';\nimport 'src/assets/scss/style.scss';\nimport Newsletter from 'src/components/Newsletter';\nimport Fallback from 'src/components/Fallback';\nimport Header from 'src/components/Header';\nimport Footer from 'src/components/Footer';\nimport withTitle from 'src/components/TitleComponent';\nimport Chat from 'src/Chat/components/Chat';\nimport { Nav2 } from '../components/Nav';\nimport { accountService } from '../services/account.service';\nimport { Account } from '../account/Index';\nimport store from '../../store';\nimport axios from 'axios';\nimport { ForgotPassword } from '../../views/account/ForgotPassword';\n\nimport onSubmit from '../Signin'\n\nconst LayoutOne = lazy(() => import('../LayoutOne'));\nconst Blog = lazy(() => import('../Blog'));\nconst Candidate = lazy(() => import('../Candidate'));\nconst Employer = lazy(() => import('../Employer'));\nconst About = lazy(() => import('../About'));\nconst ContactUs = lazy(() => import('../ContactUs'));\nconst NotFound = lazy(() => import('../NotFound'));\nconst Pricing = lazy(() => import('../Pricing'));\nconst Company = lazy(() => import('../Company'));\nconst CompanyDetails = lazy(() => import('../CompanyDetails'));\nconst Job = lazy(() => import('../Job'));\n// const EditJobDetails = lazy(() => import('../Candidate/EditPost'));\nconst JobDetails = lazy(() => import('../JobDetails'));\nconst Signup = lazy(() => import('../SignUp'));\nconst Signin = lazy(() => import('../Signin'));\n\nconst App = () => {\n    const { pathname } = useLocation();\n\n    return (\n        <Router>\n            <StickyContainer>\n                <Header />\n                <Suspense fallback={<Fallback />}>\n                    <Switch>\n                        <Redirect from='/:url*(/+)' to={pathname.slice(0, -1)} />\n\n                        <Route path='/account' component={Account} />\n\n                        <Route\n                            exact\n                            path='/'\n                            render={(props) =>\n                                withTitle({\n                                    component: LayoutOne,\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/contactus'\n                            render={(props) =>\n                                withTitle({\n                                    component: ContactUs,\n                                    title: 'Contact us',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/about'\n                            render={(props) =>\n                                withTitle({\n                                    component: About,\n                                    title: 'About us',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/pricing'\n                            render={(props) =>\n                                withTitle({\n                                    component: Pricing,\n                                    title: 'Pricing plan',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/company'\n                            render={(props) =>\n                                withTitle({\n                                    component: Company,\n                                    title: 'Company',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/company/:userID'\n                            render={(props) =>\n                                withTitle({\n                                    component: CompanyDetails,\n                                    title: 'Company details',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/job'\n                            render={(props) =>\n                                withTitle({\n                                    component: Job,\n                                    title: 'Projects',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/job/:serviceID'\n                            render={(props) =>\n                                withTitle({\n                                    component: JobDetails,\n                                    title: 'Project details',\n                                    ...props,\n                                })\n                            }\n                        />\n                        {/* <Route\n                            exact\n                            path='/edit/:serviceID'\n                            render={(props) =>\n                                withTitle({\n                                    component: EditJobDetails,\n                                    title: 'Edit Project',\n                                    ...props,\n                                })\n                            }\n                        /> */}\n\n                        <Route\n                            exact\n                            path='/signin'\n                            render={(props) =>\n                                withTitle({\n                                    component: Signin,\n                                    title: 'Login',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/signup'\n                            render={(props) =>\n                                withTitle({\n                                    component: Signup,\n                                    title: 'Sign up',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/forget-Password'\n                            render={() =>\n                                withTitle({\n                                    component: ForgotPassword,\n                                    title: 'Forgot password',\n                                })\n                            }\n                        />\n\n                        <Route\n                            exact\n                            path='/chat/:id'\n                            render={(props) =>\n                                withTitle({\n                                    component: Chat,\n                                    title: 'Chat ',\n                                    ...props,\n                                })\n                            }\n                        />\n\n                        {/* Blog pages */}\n                        <Route path='/blog' component={Blog} />\n\n                        {/* Candidate pages */}\n                        <Route path='/candidate' component={Candidate} />\n\n                        {/* Candidate pages */}\n                        <Route path='/employer' component={Employer} />\n\n                        {/* Default 404 */}\n                        <Route\n                            render={(props) =>\n                                withTitle({\n                                    component: NotFound,\n                                    title: '404 Error',\n                                    ...props,\n                                })\n                            }\n                        />\n                    </Switch>\n                </Suspense>\n                {/* <Newsletter /> */}\n                {/* <Footer /> */}\n                {/* <Setting /> */}\n            </StickyContainer>\n        </Router>\n    );\n};\n\n\nexport default withRouter(App);\n\n///// login app\n\n// import React, { useState, useEffect } from 'react';\n// import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\n\n// import { Role } from '@/_helpers';\n// import { accountService } from '@/_services';\n// import { Nav, PrivateRoute, Alert } from '@/_components';\n// import { Home } from '@/home';\n// import { Profile } from '@/profile';\n// import { Admin } from '@/admin';\n// import { Account } from '@/account';\n\n// function App() {\n//     const { pathname } = useLocation();\n//     const [user, setUser] = useState({});\n\n//     useEffect(() => {\n//         const subscription = accountService.user.subscribe(x => setUser(x));\n//         return subscription.unsubscribe;\n//     }, []);\n\n//     return (\n//         <div className={'app-container' + (user && ' bg-light')}>\n//             <Nav />\n//             <Alert />\n//             <Switch>\n//                 <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n//                 <PrivateRoute exact path=\"/\" component={Home} />\n//                 <PrivateRoute path=\"/profile\" component={Profile} />\n//                 <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\n//                 <Route path=\"/account\" component={Account} />\n//                 <Redirect from=\"*\" to=\"/\" />\n//             </Switch>\n//         </div>\n//     );\n// }\n\n// export { App };\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n// import { Provider } from 'react-redux';\nimport { Provider } from 'react-redux';\n// import { ApolloProvider } from '@apollo/client';\nimport store from './store';\nimport App from 'src/views/App';\n\nimport setAuthToken from './redux/utils/setAuthToken';\nimport { loadUser } from './redux/auth/thunks';\n\nimport { ConversationsProvider,useConversations } from './Chat/contexts/ConversationsProvider';\nimport { SocketProvider} from './Chat/contexts/SocketProvider';\nimport { ContactsProvider } from './Chat/contexts/ContactsProvider';\n\n// import configureStore from 'src/state/store';\n//  import client from 'src/config/client';\n// import { loadUser } from \"./redux/auth/thunks\";\n// import setAuthToken from \"./redux/utils/setAuthToken\";\nconst Container = () => {\n    // const reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n  useEffect(() => {\n\tif (localStorage.id !== undefined) {\n\t\tsetAuthToken(localStorage.token, localStorage.id);\n\t\tstore.dispatch(loadUser());\n\t}\n }, []);\n const id = localStorage.getItem('id');\n    return (\n        <ContactsProvider>\n    <SocketProvider id={id}>\n<ConversationsProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n            </Router>\n        </Provider>\n        </ConversationsProvider>\n        </SocketProvider>\n        </ContactsProvider>\n   \n    );\n};\n\nReactDOM.render(<Container />, document.getElementById('root'));\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nconst TitleComponent = ({ title }) => {\n\n  return (\n    <Helmet>\n      <title>{title ? `${title} - Togedoor` : 'Togedoor'}</title>\n    </Helmet>\n  );\n};\n\nconst withTitle = ({ component: Component, title, ...props }) => {\n  return (\n    <>\n      <TitleComponent title={title} />\n      <Component {...props} />\n    </>\n  );\n};\n\nexport default withTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div-contain\":\"LoginItem_div-contain__34GEw\",\"headers\":\"LoginItem_headers__EMRv0\",\"bullets\":\"LoginItem_bullets__p1jgi\",\"uls\":\"LoginItem_uls__1rhRQ\"};","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  EDIT_USER_FAIL,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_REQUEST,\r\n  ACCOUNT_DELETED,\r\n} from \"./types\";\r\n\r\nconst userLoaded = (payload) => ({\r\n  type: USER_LOADED,\r\n  payload,\r\n});\r\n\r\nconst authError = () => ({\r\n  type: AUTH_ERROR,\r\n});\r\n\r\nconst registerSuccess = (payload) => ({\r\n  type: REGISTER_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst registerFail = () => ({\r\n  type: REGISTER_FAIL,\r\n});\r\n\r\nconst loginSuccess = (payload) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst loginFail = () => ({\r\n  type: LOGIN_FAIL,\r\n});\r\n\r\nconst editSuccess = () => ({\r\n  type: EDIT_USER_SUCCESS,\r\n});\r\n\r\nconst editFail = () => ({\r\n  type: EDIT_USER_FAIL,\r\n});\r\n\r\nconst editRequest = () => ({\r\n  type: EDIT_USER_REQUEST,\r\n});\r\nconst deleteAccount = () => ({\r\n  type: ACCOUNT_DELETED,\r\n});\r\n\r\nconst logout = () => ({ type: LOGOUT });\r\n\r\nexport {\r\n  logout,\r\n  loginFail,\r\n  loginSuccess,\r\n  registerFail,\r\n  registerSuccess,\r\n  authError,\r\n  userLoaded,\r\n  editFail,\r\n  editSuccess,\r\n  deleteAccount,\r\n  editRequest,\r\n};\r\n","import axios from 'axios';\r\nimport api from '../utils/api';\r\n\r\nimport {\r\n    userLoaded,\r\n    authError,\r\n    loginSuccess,\r\n    loginFail,\r\n    editFail,\r\n    editSuccess,\r\n    editRequest,\r\n} from './actions';\r\n\r\n\r\n\r\nconst token = localStorage.getItem('token');\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        var config1 = {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n\r\n        };\r\n        const res = await api.get(`/${localStorage.id}`, config1);\r\n        dispatch(userLoaded(res.data));\r\n\r\n        console.log('success response:_', localStorage.id);\r\n    } catch (err) {\r\n        dispatch(authError());\r\n        // console.log('This Error from loadUser in `thunks.js`:');\r\n        throw err;\r\n    }\r\n};\r\n\r\n// Register User\r\nexport const registerUser = (formData) => async (dispatch) => {\r\n    // console.log(\"my form data:\", formData);\r\n    // try {\r\n    //   const res = await api.post(\"/accounts/register\", formData);\r\n    //   dispatch(registerSuccess(res.data));\r\n    //   dispatch(loadUser());\r\n    // } catch (err) {\r\n    //   const errors = err.response.data.errors;\r\n    //   if (errors) {\r\n    //     console.log(\"error\", errors);\r\n    //   }\r\n    //   dispatch(registerFail());\r\n    // }\r\n};\r\n\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n    console.log('redux log func');\r\n    const body = { email, password };\r\n    console.log('body');\r\n    console.log(body);\r\n    try {\r\n        const res = await api.post('/authenticate', body);\r\n        console.log('LOGIN SUCCESS');\r\n        console.log('  reedux res');\r\n        console.log(' From login response');\r\n        console.log(res.data);\r\n        dispatch(loginSuccess(res.data));\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            console.log('error', errors);\r\n        }\r\n\r\n        dispatch(loginFail());\r\n    }\r\n};\r\n\r\nexport const ApiGoogle = (response) => async (dispatch) => {\r\n    console.log('new res google');\r\n\r\n    axios\r\n        .post(' https://www.togedoortestgo.site/graphql/services/googlelogin', { tokenId: response.tokenId })\r\n        .then((res) => {\r\n            const response = res.data;\r\n            console.log(' From google response');\r\n            console.log(res);\r\n            console.log(response);\r\n            // localStorage.setItem(\"token\", response.token);\r\n            // window.location.reload(false);\r\n            // debugger\r\n            if (response) {\r\n                console.log('loaduser() in google');\r\n                dispatch(loginSuccess(response));\r\n                dispatch(loadUser());\r\n            } else {\r\n                dispatch(loginFail());\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch(loginFail());\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const updateUser = (userID, formData) => async (dispatch) => {\r\n    console.log(userID, formData)\r\n    dispatch(editRequest());\r\n    try {\r\n        api.patch(`/${userID}`, formData);\r\n        console.log('UPDATE SUCCESSS------------------------------------');\r\n        dispatch(editSuccess(formData));\r\n        dispatch(loadUser);\r\n    } catch (err) {\r\n        dispatch(editFail());\r\n    }\r\n};\r\n\r\n// Logout\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  EDIT_USER_FAIL,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_REQUEST,\r\n  ACCOUNT_DELETED,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    case EDIT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        loading: false,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case EDIT_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case EDIT_USER_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n    case ACCOUNT_DELETED:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth/reducers\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux';\r\n// import setAuthToken from \"./redux/utils/setAuthToken\";\r\nimport setAuthToken from './redux/utils/setAuthToken';\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n    let previousState = currentState;\r\n    currentState = store.getState();\r\n    if (previousState.auth.jwtToken !== currentState.auth.jwtToken) {\r\n        const token = currentState.auth.jwtToken;\r\n\r\n        const id = currentState.auth.id;\r\n        console.log('currentState.auth');\r\n        console.log(currentState.auth);\r\n        setAuthToken(token, id);\r\n    }\r\n    //   console.log(\"my current state :\", currentState);\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store from \"../../store\";\r\nimport { LOGOUT } from \"../auth/types\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \" https://www.togedoortestgo.site/graphql/accounts/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  (err) => {\r\n    if (err.response.data.msg === \"Token is not valid\") {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"sourceRoot":""}