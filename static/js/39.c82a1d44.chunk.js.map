{"version":3,"sources":["../node_modules/reactstrap/es/CardTitle.js","views/Candidate/Sidebar/index.js","views/Candidate/index.js"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","CardTitle","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","CandidateSidebar","user","setUser","Card","CardImg","src","picture","CardBody","firstName","lastName","ListGroup","ListGroupItem","exact","to","icon","faUserPlus","faHeart","href","faSuitcase","faEdit","faCheckSquare","faTag","CardFooter","faPowerOff","faTrashAlt","AppliedJob","lazy","ProfileSetting","Resume","Favourite","Pricing","CreatePost","EditPost","ManageJobs","Routes","path","useRouteMatch","useState","token","localStorage","getItem","config2","headers","useEffect","axios","get","id","then","res","data","console","log","Container","Row","Col","lg","md","sm","Sidebar","fallback","render","withTitle","component","title"],"mappings":"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","file":"static/js/39.c82a1d44.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","\nimport {\n    Card,\n    CardImg,\n    CardBody,\n    CardTitle,\n    CardFooter,\n    ListGroup,\n    ListGroupItem,\n    Progress,\n} from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { handleLogout } from \"../../../components/Header/ButtonGroups\"\nimport {\n    faSuitcase,\n    faUserPlus,\n    faTachometerAlt,\n    faEdit,\n    faFile,\n    faHeart,\n    faCheckSquare,\n    faTag,\n    faPowerOff,\n    faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst CandidateSidebar = ({ user, setUser }) => {\n\n    // function handleLogout() {\n    //   handleLogout()\n    // }\n\n\n\n\n    return (\n        <Card className='sidebar-nav mb-6'>\n            <CardImg src={user.picture} />\n            <CardBody className='text-center'>\n                <CardTitle tag='h5'>\n                    {user.firstName} {user.lastName}\n                </CardTitle>\n            </CardBody>\n            <CardBody className='p-0'>\n                <ListGroup>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/profile'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faUserPlus} />\n                            Profile setting\n                        </NavLink>\n                    </ListGroupItem>\n                    {/* <ListGroupItem>\n                        <NavLink exact to='/account/reset-password'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faFile} />\n                            Change Password\n                        </NavLink>\n                    </ListGroupItem> */}\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/favourite'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faHeart} />\n                            favorite\n                        </NavLink>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <a href='/candidate/manage'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faSuitcase} />\n                            Manage projects\n                        </a>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <a href='/candidate/post'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faEdit} />\n                            Post new project\n                        </a>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/apply'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faCheckSquare} />\n                            Applied project\n                        </NavLink>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <NavLink exact to='/candidate/plan'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faTag} />\n                            Pricing plans\n                        </NavLink>\n                    </ListGroupItem>\n                </ListGroup>\n            </CardBody>\n            <CardFooter className='bg-white p-0 py-3'>\n                <ListGroup>\n                    <ListGroupItem>\n                        <Link exact to='#'>\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faPowerOff} />\n                            Log out\n                        </Link>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <Link>\n                            {' '}\n                            <FontAwesomeIcon className='text-primary mr-3' icon={faTrashAlt} />\n                            Delete profile\n                        </Link>\n                    </ListGroupItem>\n                </ListGroup>\n            </CardFooter>\n        </Card>\n    );\n};\n\nexport default CandidateSidebar;\n","import React, { Suspense, lazy, useState, useEffect } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\nimport withTitle from 'src/components/TitleComponent';\nimport { SubFallback } from 'src/components/Fallback';\nimport Sidebar from './Sidebar';\nimport axios from 'axios';\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst AppliedJob = lazy(() => import('./AppliedJob'));\nconst ProfileSetting = lazy(() => import('./ProfileSetting'));\nconst Resume = lazy(() => import('./Resume'));\nconst Favourite = lazy(() => import('./Favourite'));\nconst Pricing = lazy(() => import('./Pricing'));\nconst CreatePost = lazy(() => import('./CreatePost'));\nconst EditPost = lazy(() => import('./EditPost'));\nconst ManageJobs = lazy(() => import('./ManageJob'));\n\nconst Routes = () => {\n    const { path } = useRouteMatch();\n    const [user, setUser] = useState({});\n    const token = localStorage.getItem('token');\n\n    var config2 = {\n        headers: {\n            'Authorization': token\n        }\n    }\n\n    const editUser = (eTargetValue, eTargetName) => {\n        console.log(eTargetValue, eTargetName)\n        setUser({ ...user, [eTargetName]: eTargetValue });\n        console.log(user)\n        // updateUser(user.id, user)\n    }\n\n\n\n    useEffect(() => {\n        function fetchData() {\n            axios.get(`https://www.togedoortestgo.site/graphql/accounts/${localStorage.id}`, config2).then((res) => {\n                setUser(res.data);\n            });\n        }\n        fetchData();\n    }, [token]);\n    console.log(user);\n\n    return (\n        <Container className='pt-8'>\n            <Row>\n                <Col lg={3} md={12} sm={12}>\n                    <Sidebar user={user} setUser={setUser} />\n                </Col>\n                <Col lg={9} md={12} sm={12}>\n                    <Suspense fallback={<SubFallback />}>\n                        <Switch>\n                            <Route\n                                exact\n                                path={`${path}/edit/:serviceID`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: EditPost,\n                                        title: 'Edit Post',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/apply`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: AppliedJob,\n                                        title: 'Candidate applied projects',\n                                        ...props,\n                                    })\n                                }\n                                user={user}\n                            />\n                            <Route\n                                exact\n                                path={`${path}/profile`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: ProfileSetting,\n                                        title: 'Edit candidate profile',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/manage`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: ManageJobs,\n                                        title: 'Manage projects',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/post`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: CreatePost,\n                                        title: 'Post new project',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/resume`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Resume,\n                                        title: 'Candidates resume',\n                                        user: user,\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/favourite`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Favourite,\n                                        user: user,\n                                        title: 'Favorite projects',\n                                        ...props,\n                                    })\n                                }\n                            />\n                            <Route\n                                exact\n                                path={`${path}/plan`}\n                                render={(props) =>\n                                    withTitle({\n                                        component: Pricing,\n                                        title: 'Pricing plans',\n                                        ...props,\n                                    })\n                                }\n                            />\n                        </Switch>\n                    </Suspense>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\n\nexport default Routes;\n\n"],"sourceRoot":""}